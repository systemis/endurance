{"version":3,"sources":["state/useStore.js","models/spaceship.gltf","textures/noise.png","textures/enginetextureflip.png","components/Ship.js","textures/galaxy.jpg","constants/index.js","components/Skybox.js","util/randomInRange.js","util/distance2D.js","components/Cubes.js","components/Pongs.js","components/Walls.js","components/Effects.js","components/KeyboardControls.js","components/GameState.js","components/GlobalColor.js","audio/intro-loop.mp3","audio/main-nodrums.mp3","audio/main-onlydrums.mp3","components/Music.js","audio/speedup2.mp3","components/Sound.js","components/html/CustomLoader.js","components/html/Overlay.js","components/html/Hud.js","components/html/GameOverScreen.js","components/EnduranceWorld.js","index.js"],"names":["useStore","create","set","get","score","level","gameOver","gameStarted","musicEnabled","JSON","parse","localStorage","getItem","isSpeedingUp","controls","left","right","directionalLight","createRef","camera","ship","sun","sfx","hasInteracted","setHasInteracted","state","setIsSpeedingUp","speedingUp","incrementLevel","setScore","setGameStarted","started","setGameOver","over","enableMusic","enabled","mutation","gameSpeed","desiredSpeed","horizontalVelocity","colorLevel","shouldShiftItems","currentMusicLevel","currentLevelLength","globalColor","Color","v","Vector3","ShipModel","props","children","useGLTF","shipModel","nodes","materials","s","pointLight","useRef","innerConeExhaust","coneExhaust","outerConeExhaust","noise","useTexture","noiseTexture","exhaust","engineTexture","leftWingTrail","rightWingTrail","bodyDetail","clock","useThree","controlsRef","getState","useEffect","subscribe","current","useLayoutEffect","rotation","Math","PI","position","lookAt","x","y","z","material","visible","wrapS","wrapT","MirroredRepeatWrapping","repeat","anisotropy","useState","Vector2","innerLathe","mediumLathe","lathe","innerConeScaleFactor","useFrame","delta","accelDelta","time","getElapsedTime","slowSine","sin","medSine","fastSine","scale","abs","max","min","intensity","map","offset","scaleFactor","color","ref","decay","distance","PerspectiveCamera","makeDefault","fov","castShadow","receiveShadow","dispose","geometry","Ship_Body","attach","metalness","reflectivity","clearcoat","roughness","Ship_Body_1","Chassis","Ship_Body_2","Ship_Body_3","Ship_Body_4","args","transparent","opacity","emissive","emissiveIntensity","alphaMap","Loading","Ship","fallback","preload","PLANE_SIZE","LEFT_BOUND","RIGHT_BOUND","CIRCLE_CUBE_SIZE","CUBE_SIZE","WALL_RADIUS","COLORS","name","hex","three","THREE","Sun","sunColor","useMemo","fog","Sky","texture","galaxyTexture","sky","stars","Stars","radius","depth","count","factor","saturation","fade","side","BackSide","Fog","near","far","Skybox","randomInRange","from","to","floor","random","distance2D","p1x","p1y","p2x","p2y","a","b","sqrt","negativeBound","InstancedCubes","mesh","dummy","Object3D","cubes","temp","i","push","diamondStart","diamondEnd","isOutsideDiamond","forEach","cube","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","InstancedPongs","direction","normalize","Walls","rightWall","leftWall","Effects","composer","scene","gl","size","bloomFactor","setSize","width","height","bloom","passes","strength","render","attachArray","undefined","FXAAShader","material-uniforms-resolution-value","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","SSAOPass","AfterimagePass","pressed","useKeys","target","event","up","downHandler","e","indexOf","key","isRepeating","keyCode","upHandler","window","addEventListener","passive","removeEventListener","KeyboardControls","shipSelector","setScoreSelector","gameStartedSelector","setIsSpeedingUpSelector","setGameOverSelector","GameState","GlobalColor","materialRef","colorAlpha","previousLevel","rainbowAlpha1","rainbowAlpha2","rainbowAlpha3","rainbowAlpha4","rainbowAlpha5","rainbowSpeed","lerpColors","Music","introPlayer","themePlayer","drumPlayer","soundOrigin","AudioListener","listener","introTheme","useLoader","AudioLoader","introSong","mainTheme","mainSong","mainThemeDrums","mainSongDrums","themeFilter","audioAnalyzer","introVolume","themeVolume","drumVolume","introPlaying","startCrossfade","context","resume","setBuffer","createBiquadFilter","type","frequency","value","setFilter","AudioAnalyser","isPlaying","stop","play","setLoop","cam","add","remove","setPlaybackRate","audioLevel","MathUtils","inverseLerp","getFrequencyData","currentTime","toFixed","setVolume","SuspenseMusic","Sound","sound","speedUpSound","speedUp","SuspenseSound","defaultDataInterpolation","p","CustomLoader","active","progress","dataInterpolation","progressRef","React","rafRef","progressSpanRef","updateProgress","innerText","requestAnimationFrame","cancelAnimationFrame","style","styles","container","inner","bar","transform","marginTop","data","display","alignItems","justifyContent","transition","zIndex","textAlign","borderRadius","boxShadow","border","background","transformOrigin","fontVariantNumeric","fontSize","fontFamily","whiteSpace","textShadow","Overlay","shown","setShown","opaque","setOpaque","hasLoaded","setHasLoaded","useProgress","t","setTimeout","clearTimeout","setItem","stringify","onClick","className","getScore","Hud","showControls","setShowControls","setLeftPressed","setRightPressed","then","Date","now","scoreRef","currentScore","addEffect","oncontextmenu","preventDefault","stopPropagation","isMobile","onTouchStart","onTouchEnd","GameOverScreen","previousScores","Array","fill","highScores","setHighscores","some","previousScore","sortedScores","sort","resortedScores","newScore","textDecoration","location","reload","EnduranceWorld","bgColor","antialias","alpha","mode","dpr","object","Preload","all","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.a1163872.chunk.js","sourcesContent":["import { Color } from 'three'\nimport { createRef } from 'react'\nimport create from 'zustand'\n\nconst useStore = create((set, get) => {\n\n  return {\n    set,\n    get,\n    score: 0,\n    level: 0,\n    gameOver: false,\n    gameStarted: false,\n    musicEnabled: JSON.parse(localStorage.getItem('musicEnabled')) ?? false,\n    isSpeedingUp: false,\n    controls: {\n      left: false,\n      right: false,\n    },\n    directionalLight: createRef(),\n    camera: createRef(),\n    ship: createRef(),\n    sun: createRef(),\n    sfx: createRef(),\n    hasInteracted: false,\n    setHasInteracted: () => set(state => ({ hasInteracted: true })),\n    setIsSpeedingUp: (speedingUp) => set(state => ({ isSpeedingUp: speedingUp })),\n    incrementLevel: () => set(state => ({ level: state.level + 1 })),\n    setScore: (score) => set(state => ({ score: score })),\n    setGameStarted: (started) => set(state => ({ gameStarted: started })),\n    setGameOver: (over) => set(state => ({ gameOver: over })),\n    enableMusic: (enabled) => set(state => ({ musicEnabled: enabled }))\n  }\n})\n\nconst mutation = {\n  gameOver: false,\n  score: 0,\n  gameSpeed: 0.0,\n  desiredSpeed: 0.0,\n  horizontalVelocity: 0,\n  colorLevel: 0,\n  shouldShiftItems: false,\n  currentMusicLevel: 0,\n  currentLevelLength: 0,\n  globalColor: new Color()\n}\n\nexport { useStore, mutation }","export default __webpack_public_path__ + \"static/media/spaceship.e86972b1.gltf\";","export default __webpack_public_path__ + \"static/media/noise.2793ebd0.png\";","export default __webpack_public_path__ + \"static/media/enginetextureflip.d0f77b17.png\";","import React, { useRef, useLayoutEffect, useEffect, Suspense, useState } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { useGLTF, PerspectiveCamera, useTexture } from '@react-three/drei'\nimport { MirroredRepeatWrapping, Vector2, Vector3 } from 'three'\n\nimport shipModel from '../models/spaceship.gltf'\n\nimport noiseTexture from '../textures/noise.png'\nimport engineTexture from '../textures/enginetextureflip.png'\n\n\nimport { useStore, mutation } from '../state/useStore'\n\nconst v = new Vector3()\n\nfunction ShipModel(props, { children }) {\n  const { nodes, materials } = useGLTF(shipModel, \"https://www.gstatic.com/draco/versioned/decoders/1.4.0/\")\n  // tie ship and camera ref to store to allow getting at them elsewhere\n  const ship = useStore((s) => s.ship)\n  const camera = useStore((s) => s.camera)\n\n  const pointLight = useRef()\n\n  const innerConeExhaust = useRef()\n  const coneExhaust = useRef()\n  const outerConeExhaust = useRef()\n\n  const noise = useTexture(noiseTexture)\n  const exhaust = useTexture(engineTexture)\n\n  const leftWingTrail = useRef()\n  const rightWingTrail = useRef()\n\n  const bodyDetail = useRef()\n\n  const { clock } = useThree()\n\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n\n  // subscribe to controller updates on mount\n  const controlsRef = useRef(useStore.getState().controls)\n  useEffect(() => useStore.subscribe(\n    controls => (controlsRef.current = controls),\n    state => state.controls\n  ), [])\n\n  useLayoutEffect(() => {\n    camera.current.rotation.set(0, Math.PI, 0)\n    camera.current.position.set(0, 4, -9) // 0, 1.5, -8\n    camera.current.lookAt(v.set(ship.current.position.x, ship.current.position.y, ship.current.position.z + 10)) // modify the camera tracking to look above the center of the ship\n\n    camera.current.rotation.z = Math.PI\n    ship.current.rotation.y = Math.PI\n  }, [ship, camera])\n\n  // turn off movement related parts when we arent moving\n  useLayoutEffect(() => {\n    if (!gameStarted || gameOver) {\n      innerConeExhaust.current.material.visible = false\n      coneExhaust.current.material.visible = false\n      outerConeExhaust.current.material.visible = false\n      leftWingTrail.current.material.visible = false\n      rightWingTrail.current.material.visible = false\n      pointLight.current.visible = false\n    } else {\n      innerConeExhaust.current.material.visible = true\n      coneExhaust.current.material.visible = true\n      outerConeExhaust.current.material.visible = true\n      leftWingTrail.current.material.visible = true\n      rightWingTrail.current.material.visible = true\n      pointLight.current.visible = true\n    }\n  }, [gameStarted, gameOver])\n\n  useLayoutEffect(() => {\n    noise.wrapS = noise.wrapT = MirroredRepeatWrapping\n    noise.repeat.set(1, 1)\n    noise.anisotropy = 16\n\n    exhaust.wrapS = exhaust.wrapT = MirroredRepeatWrapping\n    exhaust.repeat.set(1, 1)\n    exhaust.anisotropy = 16\n  }, [noise, exhaust])\n\n  const [innerLathe] = useState(() => {\n    const points = [\n      new Vector2(0.2, 0.8),\n      new Vector2(0.1, 0),\n      new Vector2(0.3, 1.5),\n      new Vector2(0.4, 1.9),\n      new Vector2(0.01, 7)]\n\n    return points\n  })\n\n  const [mediumLathe] = useState(() => {\n    const points = [\n      new Vector2(0.2, 0),\n      new Vector2(0.5, 2),\n      new Vector2(0.01, 8)]\n\n    return points\n  })\n\n  const [lathe] = useState(() => {\n    const points = [\n      new Vector2(0.01, 0),\n      new Vector2(0.3, 0.8),\n      new Vector2(0.4, 1.5),\n      new Vector2(0.5, 1.9),\n      new Vector2(0.01, 9)]\n\n    return points\n  })\n\n  const innerConeScaleFactor = useRef(0.7)\n\n  useFrame((state, delta) => {\n    const accelDelta = 1 * delta * 2 // 1.5\n\n    const time = clock.getElapsedTime()\n\n    const slowSine = Math.sin(time * 5)\n    const medSine = Math.sin(time * 10)\n    const fastSine = Math.sin(time * 15)\n\n    const { left, right } = controlsRef.current\n\n    rightWingTrail.current.scale.x = fastSine / 50\n    rightWingTrail.current.scale.y = medSine / 50\n    leftWingTrail.current.scale.x = fastSine / 50\n    leftWingTrail.current.scale.y = medSine / 50\n\n    // Forward Movement\n    ship.current.position.z -= mutation.gameSpeed * delta * 165\n\n\n    // Lateral Movement\n    if (mutation.gameOver) {\n      mutation.horizontalVelocity = 0\n    }\n    ship.current.position.x += mutation.horizontalVelocity * delta * 165\n\n    // Curving during turns\n    ship.current.rotation.z = mutation.horizontalVelocity * 1.5\n    ship.current.rotation.y = Math.PI - mutation.horizontalVelocity * 0.4\n    ship.current.rotation.x = -Math.abs(mutation.horizontalVelocity) / 10 // max/min velocity is -0.5/0.5, divide by ten to get our desired max rotation of 0.05\n\n    // Ship Jitter - small incidental movements\n    ship.current.position.y -= slowSine / 200\n    ship.current.rotation.x += slowSine / 100\n    ship.current.rotation.z += Math.sin(time * 4) / 100\n\n    // pointLight follow along \n    pointLight.current.position.z = ship.current.position.z + 1\n    pointLight.current.position.x = ship.current.position.x\n    pointLight.current.position.y -= slowSine / 80\n\n    // uncomment to unlock camera\n    camera.current.position.z = ship.current.position.z + 13.5 // + 13.5\n    camera.current.position.y = ship.current.position.y + 5 // 5\n    camera.current.position.x = ship.current.position.x\n\n    camera.current.rotation.y = Math.PI\n\n    if ((left && right) || (!left && !right)) {\n      if (mutation.horizontalVelocity < 0) {\n        if (mutation.horizontalVelocity + accelDelta > 0) {\n          mutation.horizontalVelocity = 0\n        } else {\n          mutation.horizontalVelocity += accelDelta\n        }\n      }\n\n      if (mutation.horizontalVelocity > 0) {\n        if (mutation.horizontalVelocity - accelDelta < 0) {\n          mutation.horizontalVelocity = 0\n        } else {\n          mutation.horizontalVelocity -= accelDelta\n        }\n      }\n    }\n\n    if (!mutation.gameOver && mutation.gameSpeed > 0) {\n      if ((left && !right)) {\n        mutation.horizontalVelocity = Math.max(-0.7 /* -0.5 */, mutation.horizontalVelocity - accelDelta)\n\n        // wing trail\n        rightWingTrail.current.scale.x = fastSine / 30\n        rightWingTrail.current.scale.y = slowSine / 30\n        leftWingTrail.current.scale.x = fastSine / 200\n        leftWingTrail.current.scale.y = slowSine / 200\n      }\n\n      if ((!left && right)) {\n        mutation.horizontalVelocity = Math.min(0.7 /* 0.7 */, mutation.horizontalVelocity + accelDelta)\n\n        // wing trail\n        leftWingTrail.current.scale.x = fastSine / 30\n        leftWingTrail.current.scale.y = slowSine / 30\n        rightWingTrail.current.scale.x = fastSine / 200\n        rightWingTrail.current.scale.y = slowSine / 200\n      }\n    }\n\n    pointLight.current.intensity = 20 - (fastSine / 15)\n\n    outerConeExhaust.current.material.map.offset.y += 0.01 * (0.4 + mutation.gameSpeed) * delta * 165\n    coneExhaust.current.material.map.offset.y -= 0.01 * (0.4 + mutation.gameSpeed) * delta * 165\n\n    if (mutation.desiredSpeed > mutation.gameSpeed) {\n      pointLight.current.intensity = 30 - (fastSine / 15)\n\n      if (innerConeScaleFactor.current < 0.95) {\n        if (innerConeScaleFactor.current + 0.005 * delta * 165 > 0.95) {\n          innerConeScaleFactor.current = 0.95\n        } else {\n          innerConeScaleFactor.current += 0.005 * delta * 165\n        }\n      }\n    } else {\n      if (innerConeScaleFactor.current > 0.7) {\n        if (innerConeScaleFactor.current - 0.005 * delta * 165 < 0.7) {\n          innerConeScaleFactor.current = 0.7\n        } else {\n          innerConeScaleFactor.current -= 0.005 * delta * 165\n        }\n      }\n    }\n\n\n    const scaleFactor = mutation.currentMusicLevel > 0.8 ? mutation.currentMusicLevel + 0.2 : 1\n\n    innerConeExhaust.current.scale.z = (fastSine / 15)\n    innerConeExhaust.current.scale.x = (innerConeScaleFactor.current + fastSine / 15) * scaleFactor\n    coneExhaust.current.scale.z = (fastSine / 15)\n    coneExhaust.current.scale.x = (0.85 + fastSine / 15) * scaleFactor\n    outerConeExhaust.current.scale.z = (0.9 + fastSine / 15)\n    outerConeExhaust.current.scale.x = (0.9 + fastSine / 15) * scaleFactor\n\n    bodyDetail.current.material.color = mutation.globalColor\n  })\n\n  return (\n    <>\n      <pointLight ref={pointLight} color=\"tomato\" decay={10} distance={40} intensity={5} position={[0, 3, -5]} />\n      <PerspectiveCamera makeDefault ref={camera} fov={75} rotation={[0, Math.PI, 0]} position={[0, 10, -10]} />\n      <group castShadow receiveShadow ref={ship} position={[0, 3, -10]} {...props} dispose={null}>\n        {children}\n        <mesh geometry={nodes.Ship_Body.geometry}>\n          <meshStandardMaterial attach=\"material\" color=\"lightblue\" metalness={0.8} reflectivity={1} clearcoat={1} roughness={0} />\n        </mesh>\n        <mesh receiveShadow castShadow geometry={nodes.Ship_Body_1.geometry} material={materials.Chassis} />\n        <mesh geometry={nodes.Ship_Body_2.geometry}>\n          <meshBasicMaterial attach=\"material\" color=\"orange\" />\n        </mesh>\n        <mesh receiveShadow castShadow geometry={nodes.Ship_Body_3.geometry} material={materials['Gray Metal']} />\n        <mesh ref={bodyDetail} geometry={nodes.Ship_Body_4.geometry}>\n          <meshLambertMaterial attach=\"material\" color=\"white\" />\n        </mesh>\n        <mesh ref={leftWingTrail} scale={[0.1, 0.05, 2]} position={[1.4, 0.2, -7]}>\n          <dodecahedronBufferGeometry args={[1.5, 3]} />\n          <meshBasicMaterial transparent opacity={0.8} color=\"white\" />\n        </mesh>\n        <mesh ref={rightWingTrail} scale={[0.1, 0.05, 2]} position={[-1.4, 0.2, -7]}>\n          <dodecahedronBufferGeometry args={[1.5, 3]} />\n          <meshBasicMaterial transparent opacity={0.8} color=\"white\" />\n        </mesh>\n        <mesh visible={true} ref={innerConeExhaust} position={[0, -0.3, 0.3]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[innerLathe, 20]} />\n          <meshLambertMaterial transparent opacity={1} color=\"white\" />\n        </mesh>\n        <mesh visible={true} ref={coneExhaust} position={[0, -0.3, 0.25]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[mediumLathe, 30]} />\n          <meshLambertMaterial transparent opacity={0.8} map={noise} color={0xAAAAAA} emissive=\"red\" emissiveIntensity={1} />\n        </mesh>\n        <mesh visible={true} ref={outerConeExhaust} position={[0, -0.3, 0]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[lathe, 50]} />\n          <meshLambertMaterial transparent alphaMap={exhaust} map={exhaust} color=\"hotpink\" />\n        </mesh>\n      </group>\n    </>\n  )\n}\n\n\nuseGLTF.preload(shipModel, \"https://www.gstatic.com/draco/versioned/decoders/1.4.0/\")\n\nfunction Loading() {\n  return (\n    <mesh visible position={[0, 0.87, 0]} rotation={[0, 0, 0]}>\n      <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"black\"\n        transparent\n        opacity={1}\n        roughness={1}\n        metalness={0}\n      />\n    </mesh>\n  )\n}\n\n\nexport default function Ship({ children }) {\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <ShipModel>\n        {children}\n      </ShipModel>\n    </Suspense>\n  )\n}","export default __webpack_public_path__ + \"static/media/galaxy.a37e4a35.jpg\";","import * as THREE from 'three'\n\n/**\n * The size of each ground plane in meters, 1000 is fine\n */\nexport const PLANE_SIZE = 1000\n\n/**\n * How many ground planes must we traverse per level, default 6\n */\nexport const LEVEL_SIZE = 6\n\nexport const LEFT_BOUND = (-PLANE_SIZE / 2) * 0.6\nexport const RIGHT_BOUND = (PLANE_SIZE / 2) * 0.6\n\nexport const CIRCLE_CUBE_SIZE = 15\nexport const CIRCLE_CUBE_AMOUNT = 20\n\nexport const CUBE_SIZE = 20\nexport const CUBE_AMOUNT = 60\nexport const INITIAL_GAME_SPEED = 0.8\nexport const GAME_SPEED_MULTIPLIER = 0.2\nexport const WALL_RADIUS = 40\nexport const COLORS = [\n  {\n    name: 'red',\n    hex: '#ff2919',\n    three: new THREE.Color(0xff2919) //  0xff3021 #ff1e0d\n  },\n  {\n    name: 'pink',\n    hex: '#ff69b4',\n    three: new THREE.Color(0xff2190)\n  },\n  {\n    name: 'orange',\n    hex: '#bd4902',\n    three: new THREE.Color(0xbd4902) //0xcc4e00\n  },\n  {\n    name: 'green',\n    hex: '#26a300',\n    three: new THREE.Color(0x26a300) // 0x2ec200\n  },\n  {\n    name: 'blue',\n    hex: '#217aff',\n    three: new THREE.Color(0x2069d6)\n  },\n  {\n    name: 'purple',\n    hex: '#9370D8',\n    three: new THREE.Color(0x6942b8)\n  },\n  {\n    name: 'white',\n    hex: '#ffffff',\n    three: new THREE.Color(0x6b6b6b) // 0x828282\n  },\n  {\n    name: 'black',\n    hex: '#000000',\n    three: new THREE.Color(0xCCCCCC)\n  }\n]\n","import { Suspense, useRef, useMemo, useLayoutEffect } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport { useTexture, Stars } from '@react-three/drei'\nimport { Color, BackSide, MirroredRepeatWrapping } from 'three'\n\nimport galaxyTexture from '../textures/galaxy.jpg'\n\nimport { mutation, useStore } from '../state/useStore'\n\nimport { COLORS } from '../constants'\n\nfunction Sun() {\n  const { clock } = useThree()\n\n  const sun = useStore((s) => s.sun)\n  const ship = useStore((s) => s.ship)\n\n  const sunColor = useMemo(() => new Color(1, 0.694, 0.168), [])\n\n  useFrame((state, delta) => {\n    if (ship.current) {\n      sun.current.position.z = ship.current.position.z - 2000\n      sun.current.position.x = ship.current.position.x\n    }\n\n    const scaleFactor = mutation.currentMusicLevel\n\n    sun.current.scale.x += Math.sin(clock.getElapsedTime() * 3) / 3000\n    sun.current.scale.y += Math.sin(clock.getElapsedTime() * 3) / 3000\n\n    if (scaleFactor >= 0.8 && sun.current.scale.x < 1.05) {\n      sun.current.scale.x += scaleFactor * delta * 2\n      sun.current.scale.y += scaleFactor * delta * 2\n    } else if (sun.current.scale.x > 1) {\n      sun.current.scale.x -= scaleFactor * delta * 0.5\n      sun.current.scale.y -= scaleFactor * delta * 0.5\n    }\n  })\n\n  return (\n    <mesh ref={sun} position={[0, 0, -2000]}>\n      <sphereGeometry attach=\"geometry\" args={[300, 30, 30]} />\n      <meshStandardMaterial fog={false} emissive={sunColor} emissiveIntensity={1} attach=\"material\" color={COLORS[1].three} />\n    </mesh>\n  )\n}\n\nfunction Sky() {\n  const texture = useTexture(galaxyTexture)\n  const sky = useRef()\n  const stars = useRef()\n\n  const ship = useStore((s) => s.ship)\n\n  useLayoutEffect(() => {\n    texture.wrapS = texture.wrapT = MirroredRepeatWrapping\n    texture.repeat.set(1.8, 1.8)\n    texture.anisotropy = 16\n  }, [texture])\n\n\n  useFrame((state, delta) => {\n    sky.current.rotation.z += delta * 0.02 * mutation.gameSpeed\n    stars.current.rotation.z += delta * 0.02 * mutation.gameSpeed\n    sky.current.emissive = mutation.globalColor\n\n    if (ship.current) {\n      sky.current.position.x = ship.current.position.x\n      stars.current.position.x = ship.current.position.x\n      sky.current.position.z = ship.current.position.z\n      stars.current.position.z = ship.current.position.z\n    }\n  })\n\n\n  return (\n    <>\n      <Stars ref={stars} radius={800} depth={100} count={10000} factor={40} saturation={1} fade />\n      <mesh ref={sky} position={[0, 10, -50]} rotation={[0, 0, Math.PI]}>\n        <hemisphereLight intensity={0.7} />\n        <sphereGeometry attach=\"geometry\" args={[2000, 10, 10]} />\n        <meshPhongMaterial emissive={COLORS[0].three} emissiveIntensity={0.1} fog={false} side={BackSide} attach=\"material\" map={texture} />\n      </mesh>\n    </>\n  )\n}\n\nfunction Fog() {\n  const fog = useRef()\n\n  useFrame((state, delta) => {\n    fog.current.near = 100\n    fog.current.far = 800\n    fog.current.color = mutation.globalColor\n  })\n\n  return (\n    <fog ref={fog} attach=\"fog\" args={['#bf6c00', 600, 800]} />\n  )\n}\n\n\nexport default function Skybox() {\n\n  return (\n    <Suspense fallback={null}>\n      <Sun />\n      <Sky />\n      <Fog />\n    </Suspense>\n  )\n}","const randomInRange = (from, to) => Math.floor(Math.random() * (to - from + 1)) - to\n\nexport default randomInRange","export default function distance2D(p1x, p1y, p2x, p2y) {\n  const a = p2x - p1x;\n  const b = p2y - p1y;\n\n  return Math.sqrt(a * a + b * b);\n}","import { Object3D } from 'three'\nimport { useRef, useMemo } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { CUBE_AMOUNT, CUBE_SIZE, PLANE_SIZE, COLORS, WALL_RADIUS, LEVEL_SIZE, LEFT_BOUND, RIGHT_BOUND } from '../constants'\nimport { useStore, mutation } from '../state/useStore'\n\nimport randomInRange from '../util/randomInRange'\nimport distance2D from '../util/distance2D'\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2\n\nexport default function InstancedCubes() {\n  const mesh = useRef()\n  const material = useRef()\n\n  const ship = useStore(s => s.ship)\n  const level = useStore(s => s.level)\n\n  const dummy = useMemo(() => new Object3D(), [])\n  const cubes = useMemo(() => {\n    // Setup initial cube positions\n    const temp = []\n    for (let i = 0; i < CUBE_AMOUNT; i++) {\n      const x = randomInRange(negativeBound, positiveBound)\n      const y = 10\n      const z = -900 + randomInRange(-400, 400)\n\n      temp.push({ x, y, z })\n    }\n    return temp\n  }, [])\n\n  const diamondStart = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE - 2.6), [level])\n  const diamondEnd = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE), [level])\n\n  useFrame((state, delta) => {\n    let isOutsideDiamond = false\n    if (ship.current) {\n      if (ship.current.position.z > diamondStart || ship.current.position.z < diamondEnd) {\n        isOutsideDiamond = true\n      }\n    }\n\n    cubes.forEach((cube, i) => {\n      if (ship.current) {\n        if (cube.z - ship.current.position.z > -15) { // No need to run the rather expensive distance function if the ship is too far away\n          if (cube.x - ship.current.position.x > -15 || cube.x - ship.current.position.x < 15) {\n            const distanceToShip = distance2D(ship.current.position.x, ship.current.position.z, cube.x, cube.z)\n\n            if (distanceToShip < 12) {\n              mutation.gameSpeed = 0\n              mutation.gameOver = true\n            }\n          }\n        }\n\n        if (cube.z - ship.current.position.z > 15) {\n          if (isOutsideDiamond) {\n            cube.z = ship.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n            cube.y = -CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          } else {\n            cube.z = ship.current.position.z - (PLANE_SIZE * 3.1) + randomInRange(-200, 0)\n            cube.y = -CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          }\n        }\n\n        if (cube.y < CUBE_SIZE / 2) {\n          if (cube.y + delta * 100 > CUBE_SIZE / 2) {\n            cube.y = CUBE_SIZE / 2\n          } else {\n            cube.y += delta * 100\n          }\n        }\n      }\n\n      material.current.color = mutation.globalColor\n\n      dummy.position.set(\n        cube.x,\n        cube.y,\n        cube.z\n      )\n\n      // apply changes to dummy and to the instanced matrix\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n\n    // THREE to draw the updated matrix\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={mesh} args={[null, null, CUBE_AMOUNT]}>\n      <boxBufferGeometry args={[CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]} />\n      {/* <circleBufferGeometry args={[CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]} /> */}\n      <meshBasicMaterial ref={material} color={COLORS[2].three} />\n    </instancedMesh>\n  )\n}","import { Object3D, Vector3 } from 'three'\nimport { useRef, useMemo } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { CIRCLE_CUBE_AMOUNT, CIRCLE_CUBE_SIZE, PLANE_SIZE, COLORS, WALL_RADIUS, LEVEL_SIZE, LEFT_BOUND, RIGHT_BOUND } from '../constants'\nimport { useStore, mutation } from '../state/useStore'\n\nimport randomInRange from '../util/randomInRange'\nimport distance2D from '../util/distance2D'\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2\nconst YOUR_SPEED_PARAMETER = 50;\n\nexport default function InstancedPongs() {\n  const mesh = useRef()\n  const material = useRef()\n\n  const ship = useStore(s => s.ship)\n  const level = useStore(s => s.level)\n  const gameStarted = useStore(s => s.gameStarted);\n\n  const dummy = useMemo(() => new Object3D(), [])\n  const cubes = useMemo(() => {\n    // Setup initial cube positions\n    const temp = []\n    for (let i = 0; i < CIRCLE_CUBE_AMOUNT; i++) {\n      const x = randomInRange(negativeBound, positiveBound)\n      const y = 10\n      const z = -900 + randomInRange(-400, 400)\n\n      temp.push({ x, y, z })\n    }\n    return temp\n  }, [])\n\n  const diamondStart = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE - 2.6), [level])\n  const diamondEnd = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE), [level])\n\n  useFrame((state, delta) => {\n    let isOutsideDiamond = false\n    if (ship.current) {\n      if (ship.current.position.z > diamondStart || ship.current.position.z < diamondEnd) {\n        isOutsideDiamond = true\n      }\n    }\n\n    cubes.forEach((cube, i) => {\n      if (ship.current) {\n        const direction = new Vector3(\n          ship.current.position.x - cube.x,\n          0,\n          ship.current.position.z - cube.z\n        ).normalize()\n\n        \n        if (gameStarted)  {\n          cube.z += direction.z * delta * YOUR_SPEED_PARAMETER\n        }\n\n        // Check for collision with ship\n        const distanceToShip = distance2D(ship.current.position.x, ship.current.position.z, cube.x, cube.z)\n        if (distanceToShip < 12) {\n          mutation.gameSpeed = 0\n          mutation.gameOver = true\n        }\n\n        // Reset position if the circle is too far from the ship\n        if (cube.z - ship.current.position.z > 15) {\n          if (isOutsideDiamond) {\n            cube.z = ship.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n            cube.y = -CIRCLE_CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          } else {\n            cube.z = ship.current.position.z - (PLANE_SIZE * 3.1) + randomInRange(-200, 0)\n            cube.y = -CIRCLE_CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          }\n        }\n\n        // Move circle upward\n        if (cube.y < CIRCLE_CUBE_SIZE / 2) {\n          if (cube.y + delta * 100 > CIRCLE_CUBE_SIZE / 2) {\n            cube.y = CIRCLE_CUBE_SIZE / 2\n          } else {\n            cube.y += delta * 100\n          }\n        }\n      }\n\n      material.current.color = mutation.globalColor\n\n      dummy.position.set(cube.x, cube.y, cube.z)\n\n      // apply changes to dummy and to the instanced matrix\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n\n    // THREE to draw the updated matrix\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={mesh} args={[null, null, CIRCLE_CUBE_AMOUNT]}>\n      <circleBufferGeometry args={[CIRCLE_CUBE_SIZE, CIRCLE_CUBE_SIZE, CIRCLE_CUBE_SIZE]} />\n      <meshBasicMaterial ref={material} color={COLORS[2].three} />\n    </instancedMesh>\n  )\n}","import { Cone } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport { useRef } from 'react'\n\nimport { useStore, mutation } from '../state/useStore'\nimport { PLANE_SIZE, WALL_RADIUS, COLORS, LEFT_BOUND, RIGHT_BOUND } from '../constants'\n\nexport default function Walls() {\n  const ship = useStore((s) => s.ship)\n\n  const rightWall = useRef()\n  const leftWall = useRef()\n\n  useFrame((state, delta) => {\n    if (ship.current) {\n      rightWall.current.position.z = ship.current.position.z\n      leftWall.current.position.z = ship.current.position.z\n\n      if (ship.current.position.x <= LEFT_BOUND + (WALL_RADIUS / 2) || ship.current.position.x >= RIGHT_BOUND - (WALL_RADIUS / 2)) {\n        mutation.gameSpeed = 0\n        mutation.gameOver = true\n      }\n    }\n\n    leftWall.current.material.color = mutation.globalColor\n    rightWall.current.material.color = mutation.globalColor\n  })\n\n  return (\n    <>\n      <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[LEFT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={leftWall}>\n        <meshBasicMaterial attach=\"material\" color={COLORS[0].three} />\n      </Cone>\n      <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[RIGHT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={rightWall}>\n        <meshBasicMaterial attach=\"material\" color={COLORS[0].three} />\n      </Cone>\n    </>\n  )\n}","import { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\n\nimport { useStore, mutation } from '../state/useStore'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, SSAOPass, AfterimagePass })\n\n\n\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n\n  const bloomFactor = useRef(0)\n\n  const musicEnabled = useStore(s => s.musicEnabled)\n\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame((state, delta) => {\n    if (musicEnabled) {\n      const bloom = composer.current.passes[1]\n\n      // const bloomFactor = mutation.currentMusicLevel\n      // console.log(bloomFactor)\n\n      if (mutation.currentMusicLevel > bloomFactor.current) {\n        bloomFactor.current = mutation.currentMusicLevel\n      } else {\n        bloomFactor.current -= delta * 0.5\n      }\n\n      bloom.strength = bloomFactor.current > 0.8 ? bloomFactor.current : 0.8\n      // bloom.radius = bloomFactor + 0.2 > 1 ? bloomFactor + 0.2 : 1\n    }\n    composer.current.render()\n  }, 1)\n\n\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 0.8 /* strength: 1 */, 1, 0.4 /* 0.4 */]} />\n      <shaderPass attachArray=\"passes\" args={[FXAAShader]} material-uniforms-resolution-value={[1 / size.width, 1 / size.height]} />\n    </effectComposer>\n  )\n}","import { useEffect } from 'react'\nimport { useStore } from '../state/useStore'\n\nconst pressed = []\n\nfunction useKeys(target, event, up = true) {\n  useEffect(() => {\n    const downHandler = (e) => {\n      if (target.indexOf(e.key) !== -1) {\n        const isRepeating = !!pressed[e.keyCode]\n        pressed[e.keyCode] = true\n        if (up || !isRepeating) event(true)\n      }\n    }\n\n    const upHandler = (e) => {\n      if (target.indexOf(e.key) !== -1) {\n        pressed[e.keyCode] = false\n        if (up) event(false)\n      }\n    }\n\n    window.addEventListener('keydown', downHandler, { passive: true })\n    window.addEventListener('keyup', upHandler, { passive: true })\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [target, event, up])\n}\n\nexport default function KeyboardControls() {\n  const set = useStore((state) => state.set)\n  useKeys(['ArrowLeft', 'a', 'A'], (left) => set((state) => ({ ...state, controls: { ...state.controls, left } })))\n  useKeys(['ArrowRight', 'd', 'D'], (right) => set((state) => ({ ...state, controls: { ...state.controls, right } })))\n\n  return null\n}","import { useEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { useStore, mutation } from '../state/useStore'\nimport { INITIAL_GAME_SPEED, PLANE_SIZE, LEVEL_SIZE } from '../constants'\n\n// this is supposedly a performance improvement\nconst shipSelector = s => s.ship\nconst setScoreSelector = s => s.setScore\nconst gameStartedSelector = s => s.gameStarted\nconst setIsSpeedingUpSelector = s => s.setIsSpeedingUp\nconst setGameOverSelector = s => s.setGameOver\n\nexport default function GameState() {\n  const ship = useStore(shipSelector)\n  const setScore = useStore(setScoreSelector)\n  const gameStarted = useStore(gameStartedSelector)\n  const setIsSpeedingUp = useStore(setIsSpeedingUpSelector)\n  const setGameOver = useStore(setGameOverSelector)\n\n  const level = useStore(s => s.level)\n\n  useEffect(() => {\n    mutation.currentLevelLength = -(level * PLANE_SIZE * LEVEL_SIZE)\n  }, [level])\n\n  useEffect(() => {\n    if (gameStarted) {\n      mutation.desiredSpeed = INITIAL_GAME_SPEED\n    }\n  }, [gameStarted])\n\n\n\n  useFrame((state, delta) => {\n\n    // acceleration logic\n    const accelDelta = 1 * delta * 0.15\n    if (gameStarted && !mutation.gameOver) {\n      if (mutation.gameSpeed < mutation.desiredSpeed) {\n        setIsSpeedingUp(true)\n        if (mutation.gameSpeed + accelDelta > mutation.desiredSpeed) {\n          mutation.gameSpeed = mutation.desiredSpeed\n        } else {\n          mutation.gameSpeed += accelDelta\n        }\n      } else {\n        setIsSpeedingUp(false)\n      }\n    }\n\n    if (ship.current) {\n      // sets the score counter in the hud\n      mutation.score = Math.abs(ship.current.position.z) - 10\n\n      // optimization, instead of calculating this for all elements we do it once per frame here\n      mutation.shouldShiftItems = ship.current.position.z < -400 && ship.current.position.z < mutation.currentLevelLength - 400 && ship.current.position.z > mutation.currentLevelLength - 1000\n    }\n\n    if (gameStarted && mutation.gameOver) {\n      setScore(Math.abs(ship.current.position.z) - 10)\n      setGameOver(true)\n    }\n  })\n\n  return null\n}","import { useFrame } from '@react-three/fiber'\nimport { useRef } from 'react'\n\nimport { COLORS } from '../constants'\n\nimport { mutation } from '../state/useStore'\n\n// handles gracefully fading all objects to the correct color depending on level\n// mutates state directly for performance reasons\nexport default function GlobalColor({ materialRef }) {\n  const colorAlpha = useRef(0)\n  const previousLevel = useRef(0)\n\n  const rainbowAlpha1 = useRef(0)\n  const rainbowAlpha2 = useRef(0)\n  const rainbowAlpha3 = useRef(0)\n  const rainbowAlpha4 = useRef(0)\n  const rainbowAlpha5 = useRef(0)\n\n  useFrame((state, delta) => {\n    // Make sure the first level is red\n    if (mutation.colorLevel === 0) {\n      mutation.globalColor.set(COLORS[0].three)\n    }\n\n    // Rainbow Level\n    if (mutation.colorLevel === 6) {\n      const rainbowSpeed = delta * 3\n\n      if (rainbowAlpha1.current < 1) {\n        rainbowAlpha1.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[0].three, COLORS[2].three, rainbowAlpha1.current)\n      } else if (rainbowAlpha2.current < 1) {\n        rainbowAlpha2.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[2].three, COLORS[3].three, rainbowAlpha2.current)\n      } else if (rainbowAlpha3.current < 1) {\n        rainbowAlpha3.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[3].three, COLORS[1].three, rainbowAlpha3.current)\n      } else if (rainbowAlpha4.current < 1) {\n        rainbowAlpha4.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[1].three, COLORS[5].three, rainbowAlpha4.current)\n      } else if (rainbowAlpha5.current < 1) {\n        rainbowAlpha5.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[5].three, COLORS[0].three, rainbowAlpha5.current)\n      } else {\n        rainbowAlpha1.current = 0\n        rainbowAlpha2.current = 0\n        rainbowAlpha3.current = 0\n        rainbowAlpha4.current = 0\n        rainbowAlpha5.current = 0\n      }\n\n      previousLevel.current = 0\n\n      // regular levels\n    } else if (mutation.colorLevel > previousLevel.current) {\n      mutation.globalColor.lerpColors(COLORS[previousLevel.current].three, COLORS[mutation.colorLevel].three, colorAlpha.current)\n\n      if (colorAlpha.current + (delta * mutation.gameSpeed) * 0.5 > 1) {\n        colorAlpha.current = 1\n      } else {\n        colorAlpha.current += (delta * mutation.gameSpeed) * 0.5\n      }\n\n      if (colorAlpha.current === 1) {\n        previousLevel.current = mutation.colorLevel\n        colorAlpha.current = 0\n      }\n    }\n  })\n\n  return null\n}","export default __webpack_public_path__ + \"static/media/intro-loop.85c70e50.mp3\";","export default __webpack_public_path__ + \"static/media/main-nodrums.b36a5309.mp3\";","export default __webpack_public_path__ + \"static/media/main-onlydrums.f5b7b0b0.mp3\";","import { AudioListener, AudioLoader, AudioAnalyser } from 'three'\nimport { useRef, useEffect, useState, Suspense } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { MathUtils } from 'three'\n\n\nimport { mutation, useStore } from '../state/useStore'\n\nimport introSong from '../audio/intro-loop.mp3'\n\nimport mainSong from '../audio/main-nodrums.mp3'\nimport mainSongDrums from '../audio/main-onlydrums.mp3'\n\nfunction Music() {\n  const introPlayer = useRef()\n  const themePlayer = useRef()\n  const drumPlayer = useRef()\n\n  const soundOrigin = useRef()\n\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n  const camera = useStore(s => s.camera)\n  const level = useStore(s => s.level)\n  const hasInteracted = useStore(s => s.hasInteracted)\n\n  const [listener] = useState(() => new AudioListener())\n\n  const introTheme = useLoader(AudioLoader, introSong)\n  const mainTheme = useLoader(AudioLoader, mainSong)\n  const mainThemeDrums = useLoader(AudioLoader, mainSongDrums)\n\n  const themeFilter = useRef()\n  const audioAnalyzer = useRef()\n\n  const introVolume = useRef(1)\n  const themeVolume = useRef(0)\n  const drumVolume = useRef(0)\n\n  const introPlaying = useRef(true)\n  const startCrossfade = useRef(false)\n\n  useEffect(() => {\n    if (hasInteracted && musicEnabled) {\n      introPlayer.current.context.resume()\n    }\n  }, [hasInteracted, musicEnabled])\n\n  useEffect(() => {\n    introPlayer.current.setBuffer(introTheme)\n  }, [introTheme])\n\n  // creates a lowpass filter with the browser audio API, also an audio analyzer\n  useEffect(() => {\n    themePlayer.current.setBuffer(mainTheme)\n    themeFilter.current = themePlayer.current.context.createBiquadFilter()\n    themeFilter.current.type = \"lowpass\"\n    themeFilter.current.frequency.value = 0\n    themePlayer.current.setFilter(themeFilter.current)\n\n  }, [mainTheme])\n\n  useEffect(() => {\n    drumPlayer.current.setBuffer(mainThemeDrums)\n\n    audioAnalyzer.current = new AudioAnalyser(drumPlayer.current, 32)\n  }, [mainThemeDrums])\n\n  useEffect(() => {\n    if (!musicEnabled) {\n      if (introPlayer.current?.isPlaying) {\n        introPlayer.current.stop()\n      }\n\n      if (themePlayer.current?.isPlaying) {\n        themePlayer.current.stop()\n        drumPlayer.current.stop()\n      }\n\n    }\n  }, [musicEnabled])\n\n  useEffect(() => {\n    if (musicEnabled && !gameOver) {\n      if (!introPlayer.current.isPlaying) {\n        introPlayer.current.play()\n        introPlaying.current = true\n      }\n    } else {\n      if (introPlayer.current?.isPlaying) {\n        introPlayer.current.stop()\n      }\n    }\n\n    introPlayer.current.setLoop(true)\n    themePlayer.current.setLoop(true)\n    drumPlayer.current.setLoop(true)\n\n    if (camera.current) {\n      const cam = camera.current\n      cam.add(listener)\n      return () => cam.remove(listener)\n    }\n\n  }, [musicEnabled, introTheme, mainTheme, mainThemeDrums, gameStarted, gameOver, camera, listener])\n\n  useEffect(() => {\n    if (level > 0 && level % 2 === 0) {\n      themePlayer.current.setPlaybackRate(1 + level * 0.02)\n      drumPlayer.current.setPlaybackRate(1 + level * 0.02)\n    } else if (level === 0) {\n      themePlayer.current.setPlaybackRate(1)\n      drumPlayer.current.setPlaybackRate(1)\n    }\n  }, [level])\n\n  useFrame((state, delta) => {\n    if (musicEnabled) {\n\n      if (audioAnalyzer.current) {\n        const audioLevel = MathUtils.inverseLerp(0, 255, audioAnalyzer.current.getFrequencyData()[0])\n        mutation.currentMusicLevel = audioLevel\n      }\n\n      // start playing main theme \"on the beat\" when game starts\n      if (gameStarted && !themePlayer.current.isPlaying) {\n        if (introPlayer.current.context.currentTime.toFixed(1) % 9.6 === 0) {\n          startCrossfade.current = true\n          themePlayer.current.play()\n          drumPlayer.current.play()\n          themePlayer.current.setVolume(0)\n          drumPlayer.current.setVolume(0)\n        }\n      }\n\n      // crossfade intro music to main theme when game starts\n      if (gameStarted && !gameOver && themeVolume.current < 1) {\n        if (!themePlayer.current.isPlaying) {\n          themePlayer.current.play()\n          drumPlayer.current.play()\n        }\n\n        themeFilter.current.frequency.value += delta * 4000\n\n        if (themeVolume.current + delta * 0.2 > 1) {\n          themeVolume.current = 1\n          drumVolume.current = 1\n        } else {\n          themeVolume.current += delta * 0.2\n          drumVolume.current += delta * 0.2\n        }\n\n        if (introVolume.current - delta * 0.2 < 0) {\n          introVolume.current = 0\n        } else {\n          introVolume.current -= delta * 0.2\n        }\n\n        introPlayer.current.setVolume(introVolume.current)\n        themePlayer.current.setVolume(themeVolume.current)\n        drumPlayer.current.setVolume(drumVolume.current)\n      }\n\n\n      // Crossfade main theme back to intro on game over\n      if (gameOver && introVolume.current < 1) {\n        if (!introPlayer.current.isPlaying) {\n          introPlayer.current.play()\n        }\n\n        themeFilter.current.frequency.value -= delta * 4000\n\n        if (themeVolume.current - delta * 0.2 < 0) {\n          themeVolume.current = 0\n          drumVolume.current = 0\n        } else {\n          themeVolume.current -= delta * 0.2\n          drumVolume.current -= delta * 0.2\n        }\n\n        if (introVolume.current + delta * 0.2 > 1) {\n          introVolume.current = 1\n        } else {\n          introVolume.current += delta * 0.2\n        }\n\n        introPlayer.current.setVolume(introVolume.current)\n        themePlayer.current.setVolume(themeVolume.current)\n        drumPlayer.current.setVolume(drumVolume.current)\n      }\n    }\n  })\n\n  return (\n    <group ref={soundOrigin}>\n      <audio ref={introPlayer} args={[listener]} />\n      <audio ref={themePlayer} args={[listener]} />\n      <audio ref={drumPlayer} args={[listener]} />\n    </group>\n  )\n}\n\nexport default function SuspenseMusic() {\n\n  return (\n    <Suspense fallback={null}>\n      <Music />\n    </Suspense>\n  )\n}","export default __webpack_public_path__ + \"static/media/speedup2.ed639f5a.mp3\";","import { AudioListener, AudioLoader } from 'three'\nimport { useRef, useEffect, useState, Suspense } from 'react'\nimport { useLoader } from '@react-three/fiber'\n\nimport { useStore } from '../state/useStore'\n\nimport speedUp from '../audio/speedup2.mp3'\n\nfunction Sound() {\n  const sound = useRef()\n  const soundOrigin = useRef()\n\n\n  const camera = useStore(s => s.camera)\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const level = useStore(s => s.level)\n  const gameStarted = useStore(s => s.gameStarted)\n\n  const [listener] = useState(() => new AudioListener())\n\n  const speedUpSound = useLoader(AudioLoader, speedUp)\n\n\n  useEffect(() => {\n    sound.current.setBuffer(speedUpSound)\n\n    if (musicEnabled) {\n      sound.current.setVolume(0.5)\n    } else {\n      sound.current.setVolume(0)\n    }\n\n    if (camera.current) {\n      const cam = camera.current\n      cam.add(listener)\n      return () => cam.remove(listener)\n    }\n  }, [speedUpSound, musicEnabled, camera, listener])\n\n  useEffect(() => {\n    if (gameStarted && level > 0) {\n      sound.current.setBuffer(speedUpSound)\n      sound.current.play()\n    }\n  }, [gameStarted, level, speedUpSound])\n\n  return (\n    <group ref={soundOrigin}>\n      <audio ref={sound} args={[listener]} />\n    </group>\n  )\n}\n\nexport default function SuspenseSound() {\n\n  return (\n    <Suspense fallback={null}>\n      <Sound />\n    </Suspense>\n  )\n}","import * as React from 'react'\n\nconst defaultDataInterpolation = (p) => `Loading: ${p.toFixed(0)}%`\n\nexport default function CustomLoader({ active, progress, dataInterpolation = defaultDataInterpolation }) {\n  const progressRef = React.useRef(0)\n  const rafRef = React.useRef(0)\n  const progressSpanRef = React.useRef(null)\n\n  const updateProgress = React.useCallback(() => {\n    if (!progressSpanRef.current) return\n    progressRef.current += (progress - progressRef.current) / 2\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current)\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress)\n  }, [dataInterpolation, progress])\n\n  React.useEffect(() => {\n    updateProgress()\n    return () => cancelAnimationFrame(rafRef.current)\n  }, [updateProgress])\n\n  return (\n    <div style={{ ...styles.container, opacity: active ? 1 : 0 }}>\n      <div>\n        <div style={{ ...styles.inner }}>\n          <div style={{ ...styles.bar, transform: `scaleX(${progress / 100})` }}></div>\n          <div style={{ marginTop: '1.5rem' }}>\n            <span ref={progressSpanRef} style={{ ...styles.data }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 300ms ease',\n    zIndex: 1000,\n  },\n  inner: {\n    width: 206,\n    height: 26,\n    textAlign: 'center',\n    borderRadius: '5px',\n    boxShadow: '0 0 20px 0px #bd4902',\n    border: '3px solid #bd4902'\n  },\n  bar: {\n    height: 20,\n    width: '100%',\n    background: '#bd4902',\n    transition: 'transform 200ms',\n    transformOrigin: 'left center',\n    boxShadow: '0 0 20px 0px #bd4902'\n  },\n  data: {\n    textAlign: 'center',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '2rem',\n    color: '#f0f0f0',\n    fontSize: '2em',\n    fontFamily: `'Commando', mono, monospace, -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    whiteSpace: 'nowrap',\n    textShadow: '0 0 20px #bd4902'\n  },\n}\n","import { useProgress } from '@react-three/drei'\nimport { useState, useEffect } from 'react'\n\nimport Loader from './CustomLoader'\n\nimport '../../styles/gameMenu.css'\n\nimport { useStore } from '../../state/useStore'\n\nconst Overlay = () => {\n  const [shown, setShown] = useState(true)\n  const [opaque, setOpaque] = useState(true)\n  const [hasLoaded, setHasLoaded] = useState(false)\n  const { active, progress } = useProgress()\n\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n  const setGameStarted = useStore(s => s.setGameStarted)\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const enableMusic = useStore(s => s.enableMusic)\n  const setHasInteracted = useStore(s => s.setHasInteracted)\n\n  useEffect(() => {\n    if (gameStarted || gameOver) {\n      setShown(false)\n    } else if (!gameStarted) {\n      setShown(true)\n    }\n  }, [gameStarted, active, gameOver])\n\n  useEffect(() => {\n    let t\n    if (hasLoaded === opaque) t = setTimeout(() => setOpaque(!hasLoaded), 300)\n    return () => clearTimeout(t)\n  }, [hasLoaded, opaque])\n\n  useEffect(() => {\n    localStorage.setItem('musicEnabled', JSON.stringify(musicEnabled))\n  }, [musicEnabled])\n\n  useEffect(() => {\n    if (progress >= 100) {\n      setHasLoaded(true)\n    }\n  }, [progress])\n\n  const handleStart = () => {\n    setGameStarted(true)\n  }\n\n  const handleMusic = () => {\n    enableMusic(!musicEnabled)\n  }\n\n  return shown ? (\n    <div onClick={() => setHasInteracted()} className={`game__container`} style={{ opacity: shown ? 1 : 0, background: opaque ? '#141622FF' : '#141622CC' }}>\n      <div className=\"game__menu\">\n        <div className=\"game__subcontainer\">\n          {!hasLoaded ? (\n            <Loader active={active} progress={progress} />\n          ) : (\n            <>\n              <button onClick={handleStart} className=\"game__menu-button\">{'STA>RT'}</button>\n              <div className=\"game__menu-options\">\n                <button onClick={handleMusic} className=\"game__menu-button game__menu-button-music\">{`TURN MUSIC ${musicEnabled ? 'OF>F' : 'O<N'}`}</button>\n                <span className=\"game__menu-controls\">\n                  <p>Controls</p>\n                  ← a / d →\n                </span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div >\n  ) : null\n}\n\nexport default Overlay","import { useEffect, useState, useRef } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { addEffect } from '@react-three/fiber'\n\nimport { useStore, mutation } from '../../state/useStore'\n\nimport '../../styles/hud.css'\n\nconst getScore = () => `${mutation.score.toFixed(0)}`\n\n\nexport default function Hud() {\n  const set = useStore((state) => state.set)\n  const level = useStore(s => s.level)\n\n  const gameOver = useStore(s => s.gameOver)\n  const gameStarted = useStore(s => s.gameStarted)\n  const isSpeedingUp = useStore(s => s.isSpeedingUp)\n\n  const [shown, setShown] = useState(false)\n\n  const [showControls, setShowControls] = useState(false)\n  const [left, setLeftPressed] = useState(false)\n  const [right, setRightPressed] = useState(false)\n\n\n  // performance optimization for the rapidly updating speedometer and score - see https://github.com/pmndrs/racing-game/blob/main/src/ui/Speed/Text.tsx\n  let then = Date.now()\n\n  const scoreRef = useRef()\n\n  let currentScore = getScore()\n\n  useEffect(() => addEffect(() => {\n    const now = Date.now()\n\n    if (now - then > 33.3333) { // throttle these to a max of 30 updates/sec\n      if (scoreRef.current) {\n        scoreRef.current.innerText = getScore()\n      }\n\n      // eslint-disable-next-line\n      then = now\n    }\n  }))\n\n  useEffect(() => {\n    if (showControls) {\n      window.oncontextmenu = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n    }\n  }, [showControls])\n\n  useEffect(() => {\n    if (gameStarted && !gameOver) {\n      setShown(true)\n    } else {\n      setShown(false)\n    }\n  }, [gameStarted, gameOver])\n\n  useEffect(() => {\n    if (isMobile) {\n      setShowControls(true)\n    } else {\n      setShowControls(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    set((state) => ({ ...state, controls: { ...state.controls, left } }))\n  }, [set, left])\n\n  useEffect(() => {\n    set((state) => ({ ...state, controls: { ...state.controls, right } }))\n  }, [set, right])\n\n  return shown ? (\n    <div className=\"hud\">\n      {level > 0 && isSpeedingUp && (\n        <div className=\"center\">\n          <h3 className=\"center__speedup\">SPEED UP</h3>\n        </div>\n      )}\n      {showControls && (\n        <div className=\"controls\">\n          <button onTouchStart={() => setLeftPressed(true)} onTouchEnd={() => setLeftPressed(false)} className={`control control__left ${left ? 'control-active' : ''}`}>{'<'}</button>\n          <button onTouchStart={() => setRightPressed(true)} onTouchEnd={() => setRightPressed(false)} className={`control control__right ${right ? 'control-active' : ''}`}>{'>'}</button>\n        </div>\n      )}\n      <div className=\"bottomRight\">\n        <div className={`score ${showControls ? 'score__withcontrols' : ''}`}>\n          <h3 className=\"score__title\">LEVEL</h3>\n          <h1 className=\"score__number\">{level + 1}</h1>\n          <h3 className=\"score__title\">SCORE</h3>\n          <h1 ref={scoreRef} className=\"score__number\">{currentScore}</h1>\n        </div>\n      </div>\n    </div>\n  ) : null\n}","import { useState, useEffect } from 'react'\n\n// import enduranceLogo from '../../textures/endurance-logo.png'\n\nimport '../../styles/gameMenu.css'\n\nimport { useStore } from '../../state/useStore'\n\nconst GameOverScreen = () => {\n  const previousScores = localStorage.getItem('highscores') ? JSON.parse(localStorage.getItem('highscores')) : [...Array(3).fill(0)]\n  const [shown, setShown] = useState(false)\n  const [opaque, setOpaque] = useState(false)\n  const [highScores, setHighscores] = useState(previousScores)\n\n  const gameOver = useStore(s => s.gameOver)\n  const score = useStore(s => s.score)\n\n  useEffect(() => {\n    let t\n    if (gameOver !== opaque) t = setTimeout(() => setOpaque(gameOver), 500)\n    return () => clearTimeout(t)\n  }, [gameOver, opaque])\n\n  useEffect(() => {\n    if (gameOver) {\n      setShown(true)\n    } else {\n      setShown(false)\n    }\n  }, [gameOver])\n\n  useEffect(() => {\n    if (gameOver) {\n      if (highScores.some(previousScore => score > previousScore)) {\n        const sortedScores = highScores.sort((a, b) => a - b)\n        sortedScores[0] = score.toFixed(0)\n        const resortedScores = sortedScores.sort((a, b) => b - a)\n\n        setHighscores(resortedScores)\n        localStorage.setItem('highscores', JSON.stringify(resortedScores))\n      }\n    }\n  }, [gameOver, highScores, score])\n\n  const handleRestart = () => {\n    window.location.reload() // TODO: make a proper restart\n  }\n\n  return shown ? (\n    <div className=\"game__container\" style={{ opacity: shown ? 1 : 0, background: opaque ? '#141622FF' : '#141622CC' }}>\n      <div className=\"game__menu\">\n        {/* <img className=\"game__logo-small\" width=\"512px\" src={enduranceLogo} alt=\"Endurance Logo\" /> */}\n        <h1 className=\"game__score-gameover\">GAME OVER</h1>\n        <div className=\"game__scorecontainer\">\n          <div className=\"game__score-left\">\n            <h1 className=\"game__score-title\">SCORE</h1>\n            <h1 className=\"game__score\">{score.toFixed(0)}</h1>\n          </div>\n          <div className=\"game__score-right\">\n            <h1 className=\"game__score-title\">HIGH SCORES</h1>\n            {highScores.map((newScore, i) => (\n              <div key={`${i}-${score}`} className=\"game__score-highscore\">\n                <span className=\"game__score-number\">{i + 1}</span>\n                <span style={{ textDecoration: score.toFixed(0) === newScore ? 'underline' : 'none' }} className=\"game__score-score\">{newScore > 0 ? newScore : '-'}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        <button onClick={handleRestart} className=\"game__menu-button\">RESTART</button>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default GameOverScreen","import { Canvas } from '@react-three/fiber'\nimport { Suspense } from 'react'\nimport { Preload } from '@react-three/drei'\n\nimport { useStore } from '../state/useStore'\n\n// THREE components\nimport Ship from './Ship'\nimport Skybox from './Skybox'\nimport Cubes from './Cubes'\nimport Pongs from './Pongs'\nimport Walls from './Walls'\nimport Effects from './Effects'\n\n// State/dummy components\nimport KeyboardControls from './KeyboardControls'\nimport GameState from './GameState'\nimport GlobalColor from './GlobalColor'\nimport Music from './Music'\nimport Sound from './Sound'\n\n// HTML components\nimport Overlay from './html/Overlay'\nimport Hud from './html/Hud'\nimport GameOverScreen from './html/GameOverScreen'\n\n\nexport default function EnduranceWorld({ color, bgColor }) {\n  const directionalLight = useStore((s) => s.directionalLight)\n\n  return (\n    <>\n      <Canvas gl={{ antialias: false, alpha: false }} mode=\"concurrent\" dpr={[1, 1.5]} style={{ background: `${bgColor}` }}>\n        <Suspense fallback={null}>\n          <GameState />\n          <Skybox />\n          <directionalLight\n            ref={directionalLight}\n            intensity={3}\n            position={[0, Math.PI, 0]}\n          />\n          <ambientLight intensity={0.1} />\n          <Ship>\n            {directionalLight.current && <primitive object={directionalLight.current.target} />}\n          </Ship>\n          <Walls />\n          <Cubes />\n          <Pongs />\n          <KeyboardControls />\n          <Effects />\n          <GlobalColor />\n          <Music />\n          <Sound />\n          <Preload all />\n        </Suspense>\n      </Canvas>\n      <Hud />\n      <GameOverScreen />\n      <Overlay />\n    </>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/normalize.css'\nimport './styles/index.css';\n\nimport EnduranceWorld from './components/EnduranceWorld';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <EnduranceWorld bgColor='#ff2919' />\n  </React.StrictMode>\n)"],"sourceRoot":""}