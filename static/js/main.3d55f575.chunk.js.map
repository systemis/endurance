{"version":3,"sources":["state/useStore.js","models/spaceship.gltf","textures/noise.png","textures/enginetextureflip.png","components/Ship.js","textures/galaxy.jpg","constants/index.js","components/Skybox.js","util/randomInRange.js","util/distance2D.js","components/Cubes.js","components/Pongs.js","components/Walls.js","components/Effects.js","components/KeyboardControls.js","components/GameState.js","components/GlobalColor.js","audio/intro-loop.mp3","audio/main-nodrums.mp3","audio/main-onlydrums.mp3","components/Music.js","audio/speedup2.mp3","components/Sound.js","components/html/CustomLoader.js","components/html/Overlay.js","components/html/Hud.js","components/html/GameOverScreen.js","components/EnduranceWorld.js","index.js"],"names":["useStore","create","set","get","_JSON$parse","score","level","gameOver","gameStarted","musicEnabled","JSON","parse","localStorage","getItem","isSpeedingUp","controls","left","right","directionalLight","createRef","camera","ship","sun","sfx","hasInteracted","setHasInteracted","state","setIsSpeedingUp","speedingUp","incrementLevel","setScore","setGameStarted","started","setGameOver","over","enableMusic","enabled","mutation","gameSpeed","desiredSpeed","horizontalVelocity","colorLevel","shouldShiftItems","currentMusicLevel","currentLevelLength","globalColor","Color","v","Vector3","ShipModel","props","_ref","children","nodes","materials","useGLTF","shipModel","s","pointLight","useRef","innerConeExhaust","coneExhaust","outerConeExhaust","noise","useTexture","noiseTexture","exhaust","engineTexture","leftWingTrail","rightWingTrail","bodyDetail","clock","useThree","controlsRef","getState","useEffect","subscribe","current","useLayoutEffect","rotation","Math","PI","position","lookAt","x","y","z","material","visible","wrapS","wrapT","MirroredRepeatWrapping","repeat","anisotropy","innerLathe","useState","Vector2","mediumLathe","lathe","innerConeScaleFactor","useFrame","delta","accelDelta","time","getElapsedTime","slowSine","sin","medSine","fastSine","scale","abs","max","min","intensity","map","offset","scaleFactor","color","_jsxs","_Fragment","_jsx","ref","decay","distance","PerspectiveCamera","makeDefault","fov","castShadow","receiveShadow","dispose","geometry","Ship_Body","attach","metalness","reflectivity","clearcoat","roughness","Ship_Body_1","Chassis","Ship_Body_2","Ship_Body_3","Ship_Body_4","args","transparent","opacity","emissive","emissiveIntensity","alphaMap","Loading","Ship","_ref2","Suspense","fallback","preload","PLANE_SIZE","LEVEL_SIZE","LEFT_BOUND","RIGHT_BOUND","CIRCLE_CUBE_SIZE","CIRCLE_CUBE_AMOUNT","CUBE_SIZE","CUBE_AMOUNT","INITIAL_GAME_SPEED","WALL_RADIUS","COLORS","name","hex","three","THREE","Sun","sunColor","useMemo","fog","Sky","texture","galaxyTexture","sky","stars","Stars","radius","depth","count","factor","saturation","fade","side","BackSide","Fog","near","far","Skybox","randomInRange","from","to","floor","random","distance2D","p1x","p1y","p2x","p2y","a","b","sqrt","negativeBound","positiveBound","InstancedCubes","mesh","dummy","Object3D","cubes","temp","i","push","diamondStart","diamondEnd","isOutsideDiamond","forEach","cube","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","YOUR_SPEED_PARAMETER","InstancedPongs","direction","normalize","Walls","rightWall","leftWall","Cone","Effects","composer","scene","gl","size","bloomFactor","setSize","width","height","bloom","passes","strength","render","attachArray","undefined","FXAAShader","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","SSAOPass","AfterimagePass","pressed","useKeys","target","event","up","arguments","length","downHandler","e","indexOf","key","isRepeating","keyCode","upHandler","window","addEventListener","passive","removeEventListener","KeyboardControls","shipSelector","setScoreSelector","gameStartedSelector","setIsSpeedingUpSelector","setGameOverSelector","GameState","GlobalColor","materialRef","colorAlpha","previousLevel","rainbowAlpha1","rainbowAlpha2","rainbowAlpha3","rainbowAlpha4","rainbowAlpha5","rainbowSpeed","lerpColors","Music","introPlayer","themePlayer","drumPlayer","soundOrigin","listener","AudioListener","introTheme","useLoader","AudioLoader","introSong","mainTheme","mainSong","mainThemeDrums","mainSongDrums","themeFilter","audioAnalyzer","introVolume","themeVolume","drumVolume","introPlaying","startCrossfade","context","resume","setBuffer","createBiquadFilter","type","frequency","value","setFilter","AudioAnalyser","_introPlayer$current","_themePlayer$current","isPlaying","stop","_introPlayer$current2","play","setLoop","cam","add","remove","setPlaybackRate","audioLevel","MathUtils","inverseLerp","getFrequencyData","currentTime","toFixed","setVolume","SuspenseMusic","Sound","sound","speedUpSound","speedUp","SuspenseSound","defaultDataInterpolation","p","concat","CustomLoader","active","progress","dataInterpolation","progressRef","React","rafRef","progressSpanRef","updateProgress","innerText","requestAnimationFrame","cancelAnimationFrame","style","styles","container","inner","bar","transform","marginTop","data","display","alignItems","justifyContent","transition","zIndex","textAlign","borderRadius","boxShadow","border","background","transformOrigin","fontVariantNumeric","fontSize","fontFamily","whiteSpace","textShadow","Overlay","shown","setShown","opaque","setOpaque","hasLoaded","setHasLoaded","useProgress","t","setTimeout","clearTimeout","setItem","stringify","onClick","className","handleStart","handleMusic","Loader","getScore","Hud","showControls","setShowControls","setLeftPressed","setRightPressed","then","Date","now","scoreRef","currentScore","addEffect","oncontextmenu","preventDefault","stopPropagation","isMobile","onTouchStart","onTouchEnd","GameOverScreen","previousScores","Array","fill","highScores","setHighscores","some","previousScore","sortedScores","sort","resortedScores","newScore","textDecoration","handleRestart","location","reload","EnduranceWorld","bgColor","Canvas","antialias","alpha","mode","dpr","object","Cubes","Pongs","Preload","all","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.3d55f575.chunk.js","sourcesContent":["import { Color } from 'three'\nimport { createRef } from 'react'\nimport create from 'zustand'\n\nconst useStore = create((set, get) => {\n\n  return {\n    set,\n    get,\n    score: 0,\n    level: 0,\n    gameOver: false,\n    gameStarted: false,\n    musicEnabled: JSON.parse(localStorage.getItem('musicEnabled')) ?? false,\n    isSpeedingUp: false,\n    controls: {\n      left: false,\n      right: false,\n    },\n    directionalLight: createRef(),\n    camera: createRef(),\n    ship: createRef(),\n    sun: createRef(),\n    sfx: createRef(),\n    hasInteracted: false,\n    setHasInteracted: () => set(state => ({ hasInteracted: true })),\n    setIsSpeedingUp: (speedingUp) => set(state => ({ isSpeedingUp: speedingUp })),\n    incrementLevel: () => set(state => ({ level: state.level + 1 })),\n    setScore: (score) => set(state => ({ score: score })),\n    setGameStarted: (started) => set(state => ({ gameStarted: started })),\n    setGameOver: (over) => set(state => ({ gameOver: over })),\n    enableMusic: (enabled) => set(state => ({ musicEnabled: enabled }))\n  }\n})\n\nconst mutation = {\n  gameOver: false,\n  score: 0,\n  gameSpeed: 0.0,\n  desiredSpeed: 0.0,\n  horizontalVelocity: 0,\n  colorLevel: 0,\n  shouldShiftItems: false,\n  currentMusicLevel: 0,\n  currentLevelLength: 0,\n  globalColor: new Color()\n}\n\nexport { useStore, mutation }","export default __webpack_public_path__ + \"static/media/spaceship.e86972b1.gltf\";","export default __webpack_public_path__ + \"static/media/noise.2793ebd0.png\";","export default __webpack_public_path__ + \"static/media/enginetextureflip.d0f77b17.png\";","import React, { useRef, useLayoutEffect, useEffect, Suspense, useState } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { useGLTF, PerspectiveCamera, useTexture } from '@react-three/drei'\nimport { MirroredRepeatWrapping, Vector2, Vector3 } from 'three'\n\nimport shipModel from '../models/spaceship.gltf'\n\nimport noiseTexture from '../textures/noise.png'\nimport engineTexture from '../textures/enginetextureflip.png'\n\n\nimport { useStore, mutation } from '../state/useStore'\n\nconst v = new Vector3()\n\nfunction ShipModel(props, { children }) {\n  const { nodes, materials } = useGLTF(shipModel, \"https://www.gstatic.com/draco/versioned/decoders/1.4.0/\")\n  // tie ship and camera ref to store to allow getting at them elsewhere\n  const ship = useStore((s) => s.ship)\n  const camera = useStore((s) => s.camera)\n\n  const pointLight = useRef()\n\n  const innerConeExhaust = useRef()\n  const coneExhaust = useRef()\n  const outerConeExhaust = useRef()\n\n  const noise = useTexture(noiseTexture)\n  const exhaust = useTexture(engineTexture)\n\n  const leftWingTrail = useRef()\n  const rightWingTrail = useRef()\n\n  const bodyDetail = useRef()\n\n  const { clock } = useThree()\n\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n\n  // subscribe to controller updates on mount\n  const controlsRef = useRef(useStore.getState().controls)\n  useEffect(() => useStore.subscribe(\n    controls => (controlsRef.current = controls),\n    state => state.controls\n  ), [])\n\n  useLayoutEffect(() => {\n    camera.current.rotation.set(0, Math.PI, 0)\n    camera.current.position.set(0, 4, -9) // 0, 1.5, -8\n    camera.current.lookAt(v.set(ship.current.position.x, ship.current.position.y, ship.current.position.z + 10)) // modify the camera tracking to look above the center of the ship\n\n    camera.current.rotation.z = Math.PI\n    ship.current.rotation.y = Math.PI\n  }, [ship, camera])\n\n  // turn off movement related parts when we arent moving\n  useLayoutEffect(() => {\n    if (!gameStarted || gameOver) {\n      innerConeExhaust.current.material.visible = false\n      coneExhaust.current.material.visible = false\n      outerConeExhaust.current.material.visible = false\n      leftWingTrail.current.material.visible = false\n      rightWingTrail.current.material.visible = false\n      pointLight.current.visible = false\n    } else {\n      innerConeExhaust.current.material.visible = true\n      coneExhaust.current.material.visible = true\n      outerConeExhaust.current.material.visible = true\n      leftWingTrail.current.material.visible = true\n      rightWingTrail.current.material.visible = true\n      pointLight.current.visible = true\n    }\n  }, [gameStarted, gameOver])\n\n  useLayoutEffect(() => {\n    noise.wrapS = noise.wrapT = MirroredRepeatWrapping\n    noise.repeat.set(1, 1)\n    noise.anisotropy = 16\n\n    exhaust.wrapS = exhaust.wrapT = MirroredRepeatWrapping\n    exhaust.repeat.set(1, 1)\n    exhaust.anisotropy = 16\n  }, [noise, exhaust])\n\n  const [innerLathe] = useState(() => {\n    const points = [\n      new Vector2(0.2, 0.8),\n      new Vector2(0.1, 0),\n      new Vector2(0.3, 1.5),\n      new Vector2(0.4, 1.9),\n      new Vector2(0.01, 7)]\n\n    return points\n  })\n\n  const [mediumLathe] = useState(() => {\n    const points = [\n      new Vector2(0.2, 0),\n      new Vector2(0.5, 2),\n      new Vector2(0.01, 8)]\n\n    return points\n  })\n\n  const [lathe] = useState(() => {\n    const points = [\n      new Vector2(0.01, 0),\n      new Vector2(0.3, 0.8),\n      new Vector2(0.4, 1.5),\n      new Vector2(0.5, 1.9),\n      new Vector2(0.01, 9)]\n\n    return points\n  })\n\n  const innerConeScaleFactor = useRef(0.7)\n\n  useFrame((state, delta) => {\n    const accelDelta = 1 * delta * 2 // 1.5\n\n    const time = clock.getElapsedTime()\n\n    const slowSine = Math.sin(time * 5)\n    const medSine = Math.sin(time * 10)\n    const fastSine = Math.sin(time * 15)\n\n    const { left, right } = controlsRef.current\n\n    rightWingTrail.current.scale.x = fastSine / 50\n    rightWingTrail.current.scale.y = medSine / 50\n    leftWingTrail.current.scale.x = fastSine / 50\n    leftWingTrail.current.scale.y = medSine / 50\n\n    // Forward Movement\n    ship.current.position.z -= mutation.gameSpeed * delta * 165\n\n\n    // Lateral Movement\n    if (mutation.gameOver) {\n      mutation.horizontalVelocity = 0\n    }\n    ship.current.position.x += mutation.horizontalVelocity * delta * 165\n\n    // Curving during turns\n    ship.current.rotation.z = mutation.horizontalVelocity * 1.5\n    ship.current.rotation.y = Math.PI - mutation.horizontalVelocity * 0.4\n    ship.current.rotation.x = -Math.abs(mutation.horizontalVelocity) / 10 // max/min velocity is -0.5/0.5, divide by ten to get our desired max rotation of 0.05\n\n    // Ship Jitter - small incidental movements\n    ship.current.position.y -= slowSine / 200\n    ship.current.rotation.x += slowSine / 100\n    ship.current.rotation.z += Math.sin(time * 4) / 100\n\n    // pointLight follow along \n    pointLight.current.position.z = ship.current.position.z + 1\n    pointLight.current.position.x = ship.current.position.x\n    pointLight.current.position.y -= slowSine / 80\n\n    // uncomment to unlock camera\n    camera.current.position.z = ship.current.position.z + 13.5 // + 13.5\n    camera.current.position.y = ship.current.position.y + 5 // 5\n    camera.current.position.x = ship.current.position.x\n\n    camera.current.rotation.y = Math.PI\n\n    if ((left && right) || (!left && !right)) {\n      if (mutation.horizontalVelocity < 0) {\n        if (mutation.horizontalVelocity + accelDelta > 0) {\n          mutation.horizontalVelocity = 0\n        } else {\n          mutation.horizontalVelocity += accelDelta\n        }\n      }\n\n      if (mutation.horizontalVelocity > 0) {\n        if (mutation.horizontalVelocity - accelDelta < 0) {\n          mutation.horizontalVelocity = 0\n        } else {\n          mutation.horizontalVelocity -= accelDelta\n        }\n      }\n    }\n\n    if (!mutation.gameOver && mutation.gameSpeed > 0) {\n      if ((left && !right)) {\n        mutation.horizontalVelocity = Math.max(-0.7 /* -0.5 */, mutation.horizontalVelocity - accelDelta)\n\n        // wing trail\n        rightWingTrail.current.scale.x = fastSine / 30\n        rightWingTrail.current.scale.y = slowSine / 30\n        leftWingTrail.current.scale.x = fastSine / 200\n        leftWingTrail.current.scale.y = slowSine / 200\n      }\n\n      if ((!left && right)) {\n        mutation.horizontalVelocity = Math.min(0.7 /* 0.7 */, mutation.horizontalVelocity + accelDelta)\n\n        // wing trail\n        leftWingTrail.current.scale.x = fastSine / 30\n        leftWingTrail.current.scale.y = slowSine / 30\n        rightWingTrail.current.scale.x = fastSine / 200\n        rightWingTrail.current.scale.y = slowSine / 200\n      }\n    }\n\n    pointLight.current.intensity = 20 - (fastSine / 15)\n\n    outerConeExhaust.current.material.map.offset.y += 0.01 * (0.4 + mutation.gameSpeed) * delta * 165\n    coneExhaust.current.material.map.offset.y -= 0.01 * (0.4 + mutation.gameSpeed) * delta * 165\n\n    if (mutation.desiredSpeed > mutation.gameSpeed) {\n      pointLight.current.intensity = 30 - (fastSine / 15)\n\n      if (innerConeScaleFactor.current < 0.95) {\n        if (innerConeScaleFactor.current + 0.005 * delta * 165 > 0.95) {\n          innerConeScaleFactor.current = 0.95\n        } else {\n          innerConeScaleFactor.current += 0.005 * delta * 165\n        }\n      }\n    } else {\n      if (innerConeScaleFactor.current > 0.7) {\n        if (innerConeScaleFactor.current - 0.005 * delta * 165 < 0.7) {\n          innerConeScaleFactor.current = 0.7\n        } else {\n          innerConeScaleFactor.current -= 0.005 * delta * 165\n        }\n      }\n    }\n\n\n    const scaleFactor = mutation.currentMusicLevel > 0.8 ? mutation.currentMusicLevel + 0.2 : 1\n\n    innerConeExhaust.current.scale.z = (fastSine / 15)\n    innerConeExhaust.current.scale.x = (innerConeScaleFactor.current + fastSine / 15) * scaleFactor\n    coneExhaust.current.scale.z = (fastSine / 15)\n    coneExhaust.current.scale.x = (0.85 + fastSine / 15) * scaleFactor\n    outerConeExhaust.current.scale.z = (0.9 + fastSine / 15)\n    outerConeExhaust.current.scale.x = (0.9 + fastSine / 15) * scaleFactor\n\n    bodyDetail.current.material.color = mutation.globalColor\n  })\n\n  return (\n    <>\n      <pointLight ref={pointLight} color=\"tomato\" decay={10} distance={40} intensity={5} position={[0, 3, -5]} />\n      <PerspectiveCamera makeDefault ref={camera} fov={75} rotation={[0, Math.PI, 0]} position={[0, 10, -10]} />\n      <group castShadow receiveShadow ref={ship} position={[0, 3, -10]} {...props} dispose={null}>\n        {children}\n        <mesh geometry={nodes.Ship_Body.geometry}>\n          <meshStandardMaterial attach=\"material\" color=\"lightblue\" metalness={0.8} reflectivity={1} clearcoat={1} roughness={0} />\n        </mesh>\n        <mesh receiveShadow castShadow geometry={nodes.Ship_Body_1.geometry} material={materials.Chassis} />\n        <mesh geometry={nodes.Ship_Body_2.geometry}>\n          <meshBasicMaterial attach=\"material\" color=\"orange\" />\n        </mesh>\n        <mesh receiveShadow castShadow geometry={nodes.Ship_Body_3.geometry} material={materials['Gray Metal']} />\n        <mesh ref={bodyDetail} geometry={nodes.Ship_Body_4.geometry}>\n          <meshLambertMaterial attach=\"material\" color=\"white\" />\n        </mesh>\n        <mesh ref={leftWingTrail} scale={[0.1, 0.05, 2]} position={[1.4, 0.2, -7]}>\n          <dodecahedronBufferGeometry args={[1.5, 3]} />\n          <meshBasicMaterial transparent opacity={0.8} color=\"white\" />\n        </mesh>\n        <mesh ref={rightWingTrail} scale={[0.1, 0.05, 2]} position={[-1.4, 0.2, -7]}>\n          <dodecahedronBufferGeometry args={[1.5, 3]} />\n          <meshBasicMaterial transparent opacity={0.8} color=\"white\" />\n        </mesh>\n        <mesh visible={true} ref={innerConeExhaust} position={[0, -0.3, 0.3]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[innerLathe, 20]} />\n          <meshLambertMaterial transparent opacity={1} color=\"white\" />\n        </mesh>\n        <mesh visible={true} ref={coneExhaust} position={[0, -0.3, 0.25]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[mediumLathe, 30]} />\n          <meshLambertMaterial transparent opacity={0.8} map={noise} color={0xAAAAAA} emissive=\"red\" emissiveIntensity={1} />\n        </mesh>\n        <mesh visible={true} ref={outerConeExhaust} position={[0, -0.3, 0]} rotation={[Math.PI / 2, 0, Math.PI]}>\n          <latheBufferGeometry args={[lathe, 50]} />\n          <meshLambertMaterial transparent alphaMap={exhaust} map={exhaust} color=\"hotpink\" />\n        </mesh>\n      </group>\n    </>\n  )\n}\n\n\nuseGLTF.preload(shipModel, \"https://www.gstatic.com/draco/versioned/decoders/1.4.0/\")\n\nfunction Loading() {\n  return (\n    <mesh visible position={[0, 0.87, 0]} rotation={[0, 0, 0]}>\n      <sphereGeometry attach=\"geometry\" args={[1, 16, 16]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"black\"\n        transparent\n        opacity={1}\n        roughness={1}\n        metalness={0}\n      />\n    </mesh>\n  )\n}\n\n\nexport default function Ship({ children }) {\n\n  return (\n    <Suspense fallback={<Loading />}>\n      <ShipModel>\n        {children}\n      </ShipModel>\n    </Suspense>\n  )\n}","export default __webpack_public_path__ + \"static/media/galaxy.a37e4a35.jpg\";","import * as THREE from 'three'\n\n/**\n * The size of each ground plane in meters, 1000 is fine\n */\nexport const PLANE_SIZE = 1000\n\n/**\n * How many ground planes must we traverse per level, default 6\n */\nexport const LEVEL_SIZE = 6\n\nexport const LEFT_BOUND = (-PLANE_SIZE / 2) * 0.6\nexport const RIGHT_BOUND = (PLANE_SIZE / 2) * 0.6\n\nexport const CIRCLE_CUBE_SIZE = 15\nexport const CIRCLE_CUBE_AMOUNT = 20\n\nexport const CUBE_SIZE = 20\nexport const CUBE_AMOUNT = 60\nexport const INITIAL_GAME_SPEED = 0.8\nexport const GAME_SPEED_MULTIPLIER = 0.2\nexport const WALL_RADIUS = 40\nexport const COLORS = [\n  {\n    name: 'red',\n    hex: '#ff2919',\n    three: new THREE.Color(0xff2919) //  0xff3021 #ff1e0d\n  },\n  {\n    name: 'pink',\n    hex: '#ff69b4',\n    three: new THREE.Color(0xff2190)\n  },\n  {\n    name: 'orange',\n    hex: '#bd4902',\n    three: new THREE.Color(0xbd4902) //0xcc4e00\n  },\n  {\n    name: 'green',\n    hex: '#26a300',\n    three: new THREE.Color(0x26a300) // 0x2ec200\n  },\n  {\n    name: 'blue',\n    hex: '#217aff',\n    three: new THREE.Color(0x2069d6)\n  },\n  {\n    name: 'purple',\n    hex: '#9370D8',\n    three: new THREE.Color(0x6942b8)\n  },\n  {\n    name: 'white',\n    hex: '#ffffff',\n    three: new THREE.Color(0x6b6b6b) // 0x828282\n  },\n  {\n    name: 'black',\n    hex: '#000000',\n    three: new THREE.Color(0xCCCCCC)\n  }\n]\n","import { Suspense, useRef, useMemo, useLayoutEffect } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport { useTexture, Stars } from '@react-three/drei'\nimport { Color, BackSide, MirroredRepeatWrapping } from 'three'\n\nimport galaxyTexture from '../textures/galaxy.jpg'\n\nimport { mutation, useStore } from '../state/useStore'\n\nimport { COLORS } from '../constants'\n\nfunction Sun() {\n  const { clock } = useThree()\n\n  const sun = useStore((s) => s.sun)\n  const ship = useStore((s) => s.ship)\n\n  const sunColor = useMemo(() => new Color(1, 0.694, 0.168), [])\n\n  useFrame((state, delta) => {\n    if (ship.current) {\n      sun.current.position.z = ship.current.position.z - 2000\n      sun.current.position.x = ship.current.position.x\n    }\n\n    const scaleFactor = mutation.currentMusicLevel\n\n    sun.current.scale.x += Math.sin(clock.getElapsedTime() * 3) / 3000\n    sun.current.scale.y += Math.sin(clock.getElapsedTime() * 3) / 3000\n\n    if (scaleFactor >= 0.8 && sun.current.scale.x < 1.05) {\n      sun.current.scale.x += scaleFactor * delta * 2\n      sun.current.scale.y += scaleFactor * delta * 2\n    } else if (sun.current.scale.x > 1) {\n      sun.current.scale.x -= scaleFactor * delta * 0.5\n      sun.current.scale.y -= scaleFactor * delta * 0.5\n    }\n  })\n\n  return (\n    <mesh ref={sun} position={[0, 0, -2000]}>\n      <sphereGeometry attach=\"geometry\" args={[300, 30, 30]} />\n      <meshStandardMaterial fog={false} emissive={sunColor} emissiveIntensity={1} attach=\"material\" color={COLORS[1].three} />\n    </mesh>\n  )\n}\n\nfunction Sky() {\n  const texture = useTexture(galaxyTexture)\n  const sky = useRef()\n  const stars = useRef()\n\n  const ship = useStore((s) => s.ship)\n\n  useLayoutEffect(() => {\n    texture.wrapS = texture.wrapT = MirroredRepeatWrapping\n    texture.repeat.set(1.8, 1.8)\n    texture.anisotropy = 16\n  }, [texture])\n\n\n  useFrame((state, delta) => {\n    sky.current.rotation.z += delta * 0.02 * mutation.gameSpeed\n    stars.current.rotation.z += delta * 0.02 * mutation.gameSpeed\n    sky.current.emissive = mutation.globalColor\n\n    if (ship.current) {\n      sky.current.position.x = ship.current.position.x\n      stars.current.position.x = ship.current.position.x\n      sky.current.position.z = ship.current.position.z\n      stars.current.position.z = ship.current.position.z\n    }\n  })\n\n\n  return (\n    <>\n      <Stars ref={stars} radius={800} depth={100} count={10000} factor={40} saturation={1} fade />\n      <mesh ref={sky} position={[0, 10, -50]} rotation={[0, 0, Math.PI]}>\n        <hemisphereLight intensity={0.7} />\n        <sphereGeometry attach=\"geometry\" args={[2000, 10, 10]} />\n        <meshPhongMaterial emissive={COLORS[0].three} emissiveIntensity={0.1} fog={false} side={BackSide} attach=\"material\" map={texture} />\n      </mesh>\n    </>\n  )\n}\n\nfunction Fog() {\n  const fog = useRef()\n\n  useFrame((state, delta) => {\n    fog.current.near = 100\n    fog.current.far = 800\n    fog.current.color = mutation.globalColor\n  })\n\n  return (\n    <fog ref={fog} attach=\"fog\" args={['#bf6c00', 600, 800]} />\n  )\n}\n\n\nexport default function Skybox() {\n\n  return (\n    <Suspense fallback={null}>\n      <Sun />\n      <Sky />\n      <Fog />\n    </Suspense>\n  )\n}","const randomInRange = (from, to) => Math.floor(Math.random() * (to - from + 1)) - to\n\nexport default randomInRange","export default function distance2D(p1x, p1y, p2x, p2y) {\n  const a = p2x - p1x;\n  const b = p2y - p1y;\n\n  return Math.sqrt(a * a + b * b);\n}","import { Object3D } from 'three'\nimport { useRef, useMemo } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { CUBE_AMOUNT, CUBE_SIZE, PLANE_SIZE, COLORS, WALL_RADIUS, LEVEL_SIZE, LEFT_BOUND, RIGHT_BOUND } from '../constants'\nimport { useStore, mutation } from '../state/useStore'\n\nimport randomInRange from '../util/randomInRange'\nimport distance2D from '../util/distance2D'\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2\n\nexport default function InstancedCubes() {\n  const mesh = useRef()\n  const material = useRef()\n\n  const ship = useStore(s => s.ship)\n  const level = useStore(s => s.level)\n\n  const dummy = useMemo(() => new Object3D(), [])\n  const cubes = useMemo(() => {\n    // Setup initial cube positions\n    const temp = []\n    for (let i = 0; i < CUBE_AMOUNT; i++) {\n      const x = randomInRange(negativeBound, positiveBound)\n      const y = 10\n      const z = -900 + randomInRange(-400, 400)\n\n      temp.push({ x, y, z })\n    }\n    return temp\n  }, [])\n\n  const diamondStart = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE - 2.6), [level])\n  const diamondEnd = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE), [level])\n\n  useFrame((state, delta) => {\n    let isOutsideDiamond = false\n    if (ship.current) {\n      if (ship.current.position.z > diamondStart || ship.current.position.z < diamondEnd) {\n        isOutsideDiamond = true\n      }\n    }\n\n    cubes.forEach((cube, i) => {\n      if (ship.current) {\n        if (cube.z - ship.current.position.z > -15) { // No need to run the rather expensive distance function if the ship is too far away\n          if (cube.x - ship.current.position.x > -15 || cube.x - ship.current.position.x < 15) {\n            const distanceToShip = distance2D(ship.current.position.x, ship.current.position.z, cube.x, cube.z)\n\n            if (distanceToShip < 12) {\n              mutation.gameSpeed = 0\n              mutation.gameOver = true\n            }\n          }\n        }\n\n        if (cube.z - ship.current.position.z > 15) {\n          if (isOutsideDiamond) {\n            cube.z = ship.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n            cube.y = -CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          } else {\n            cube.z = ship.current.position.z - (PLANE_SIZE * 3.1) + randomInRange(-200, 0)\n            cube.y = -CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          }\n        }\n\n        if (cube.y < CUBE_SIZE / 2) {\n          if (cube.y + delta * 100 > CUBE_SIZE / 2) {\n            cube.y = CUBE_SIZE / 2\n          } else {\n            cube.y += delta * 100\n          }\n        }\n      }\n\n      material.current.color = mutation.globalColor\n\n      dummy.position.set(\n        cube.x,\n        cube.y,\n        cube.z\n      )\n\n      // apply changes to dummy and to the instanced matrix\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n\n    // THREE to draw the updated matrix\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={mesh} args={[null, null, CUBE_AMOUNT]}>\n      <boxBufferGeometry args={[CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]} />\n      {/* <circleBufferGeometry args={[CUBE_SIZE, CUBE_SIZE, CUBE_SIZE]} /> */}\n      <meshBasicMaterial ref={material} color={COLORS[2].three} />\n    </instancedMesh>\n  )\n}","import { Object3D, Vector3 } from 'three'\nimport { useRef, useMemo } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { CIRCLE_CUBE_AMOUNT, CIRCLE_CUBE_SIZE, PLANE_SIZE, COLORS, WALL_RADIUS, LEVEL_SIZE, LEFT_BOUND, RIGHT_BOUND } from '../constants'\nimport { useStore, mutation } from '../state/useStore'\n\nimport randomInRange from '../util/randomInRange'\nimport distance2D from '../util/distance2D'\n\nconst negativeBound = LEFT_BOUND + WALL_RADIUS / 2\nconst positiveBound = RIGHT_BOUND - WALL_RADIUS / 2\nconst YOUR_SPEED_PARAMETER = 50;\n\nexport default function InstancedPongs() {\n  const mesh = useRef()\n  const material = useRef()\n\n  const ship = useStore(s => s.ship)\n  const level = useStore(s => s.level)\n  const gameStarted = useStore(s => s.gameStarted);\n\n  const dummy = useMemo(() => new Object3D(), [])\n  const cubes = useMemo(() => {\n    // Setup initial cube positions\n    const temp = []\n    for (let i = 0; i < CIRCLE_CUBE_AMOUNT; i++) {\n      const x = randomInRange(negativeBound, positiveBound)\n      const y = 10\n      const z = -900 + randomInRange(-400, 400)\n\n      temp.push({ x, y, z })\n    }\n    return temp\n  }, [])\n\n  const diamondStart = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE - 2.6), [level])\n  const diamondEnd = useMemo(() => -(level * PLANE_SIZE * LEVEL_SIZE) - PLANE_SIZE * (LEVEL_SIZE), [level])\n\n  useFrame((state, delta) => {\n    let isOutsideDiamond = false\n    if (ship.current) {\n      if (ship.current.position.z > diamondStart || ship.current.position.z < diamondEnd) {\n        isOutsideDiamond = true\n      }\n    }\n\n    cubes.forEach((cube, i) => {\n      if (ship.current) {\n        const direction = new Vector3(\n          ship.current.position.x - cube.x,\n          0,\n          ship.current.position.z - cube.z\n        ).normalize()\n\n        \n        if (gameStarted)  {\n          cube.z += direction.z * delta * YOUR_SPEED_PARAMETER\n        }\n\n        // Check for collision with ship\n        const distanceToShip = distance2D(ship.current.position.x, ship.current.position.z, cube.x, cube.z)\n        if (distanceToShip < 12) {\n          mutation.gameSpeed = 0\n          mutation.gameOver = true\n        }\n\n        // Reset position if the circle is too far from the ship\n        if (cube.z - ship.current.position.z > 15) {\n          if (isOutsideDiamond) {\n            cube.z = ship.current.position.z - PLANE_SIZE + randomInRange(-200, 0)\n            cube.y = -CIRCLE_CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          } else {\n            cube.z = ship.current.position.z - (PLANE_SIZE * 3.1) + randomInRange(-200, 0)\n            cube.y = -CIRCLE_CUBE_SIZE\n            cube.x = randomInRange(negativeBound, positiveBound)\n          }\n        }\n\n        // Move circle upward\n        if (cube.y < CIRCLE_CUBE_SIZE / 2) {\n          if (cube.y + delta * 100 > CIRCLE_CUBE_SIZE / 2) {\n            cube.y = CIRCLE_CUBE_SIZE / 2\n          } else {\n            cube.y += delta * 100\n          }\n        }\n      }\n\n      material.current.color = mutation.globalColor\n\n      dummy.position.set(cube.x, cube.y, cube.z)\n\n      // apply changes to dummy and to the instanced matrix\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n\n    // THREE to draw the updated matrix\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={mesh} args={[null, null, CIRCLE_CUBE_AMOUNT]}>\n      <circleBufferGeometry args={[CIRCLE_CUBE_SIZE, CIRCLE_CUBE_SIZE, CIRCLE_CUBE_SIZE]} />\n      <meshBasicMaterial ref={material} color={COLORS[2].three} />\n    </instancedMesh>\n  )\n}","import { Cone } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport { useRef } from 'react'\n\nimport { useStore, mutation } from '../state/useStore'\nimport { PLANE_SIZE, WALL_RADIUS, COLORS, LEFT_BOUND, RIGHT_BOUND } from '../constants'\n\nexport default function Walls() {\n  const ship = useStore((s) => s.ship)\n\n  const rightWall = useRef()\n  const leftWall = useRef()\n\n  useFrame((state, delta) => {\n    if (ship.current) {\n      rightWall.current.position.z = ship.current.position.z\n      leftWall.current.position.z = ship.current.position.z\n\n      if (ship.current.position.x <= LEFT_BOUND + (WALL_RADIUS / 2) || ship.current.position.x >= RIGHT_BOUND - (WALL_RADIUS / 2)) {\n        mutation.gameSpeed = 0\n        mutation.gameOver = true\n      }\n    }\n\n    leftWall.current.material.color = mutation.globalColor\n    rightWall.current.material.color = mutation.globalColor\n  })\n\n  return (\n    <>\n      <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[LEFT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={leftWall}>\n        <meshBasicMaterial attach=\"material\" color={COLORS[0].three} />\n      </Cone>\n      <Cone args={[WALL_RADIUS, PLANE_SIZE * 2, 8]} position={[RIGHT_BOUND, 0, -5]} rotation={[Math.PI / 2, 0, Math.PI]} ref={rightWall}>\n        <meshBasicMaterial attach=\"material\" color={COLORS[0].three} />\n      </Cone>\n    </>\n  )\n}","import { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\n\nimport { useStore, mutation } from '../state/useStore'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, SSAOPass, AfterimagePass })\n\n\n\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n\n  const bloomFactor = useRef(0)\n\n  const musicEnabled = useStore(s => s.musicEnabled)\n\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame((state, delta) => {\n    if (musicEnabled) {\n      const bloom = composer.current.passes[1]\n\n      // const bloomFactor = mutation.currentMusicLevel\n      // console.log(bloomFactor)\n\n      if (mutation.currentMusicLevel > bloomFactor.current) {\n        bloomFactor.current = mutation.currentMusicLevel\n      } else {\n        bloomFactor.current -= delta * 0.5\n      }\n\n      bloom.strength = bloomFactor.current > 0.8 ? bloomFactor.current : 0.8\n      // bloom.radius = bloomFactor + 0.2 > 1 ? bloomFactor + 0.2 : 1\n    }\n    composer.current.render()\n  }, 1)\n\n\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 0.8 /* strength: 1 */, 1, 0.4 /* 0.4 */]} />\n      <shaderPass attachArray=\"passes\" args={[FXAAShader]} material-uniforms-resolution-value={[1 / size.width, 1 / size.height]} />\n    </effectComposer>\n  )\n}","import { useEffect } from 'react'\nimport { useStore } from '../state/useStore'\n\nconst pressed = []\n\nfunction useKeys(target, event, up = true) {\n  useEffect(() => {\n    const downHandler = (e) => {\n      if (target.indexOf(e.key) !== -1) {\n        const isRepeating = !!pressed[e.keyCode]\n        pressed[e.keyCode] = true\n        if (up || !isRepeating) event(true)\n      }\n    }\n\n    const upHandler = (e) => {\n      if (target.indexOf(e.key) !== -1) {\n        pressed[e.keyCode] = false\n        if (up) event(false)\n      }\n    }\n\n    window.addEventListener('keydown', downHandler, { passive: true })\n    window.addEventListener('keyup', upHandler, { passive: true })\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [target, event, up])\n}\n\nexport default function KeyboardControls() {\n  const set = useStore((state) => state.set)\n  useKeys(['ArrowLeft', 'a', 'A'], (left) => set((state) => ({ ...state, controls: { ...state.controls, left } })))\n  useKeys(['ArrowRight', 'd', 'D'], (right) => set((state) => ({ ...state, controls: { ...state.controls, right } })))\n\n  return null\n}","import { useEffect } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nimport { useStore, mutation } from '../state/useStore'\nimport { INITIAL_GAME_SPEED, PLANE_SIZE, LEVEL_SIZE } from '../constants'\n\n// this is supposedly a performance improvement\nconst shipSelector = s => s.ship\nconst setScoreSelector = s => s.setScore\nconst gameStartedSelector = s => s.gameStarted\nconst setIsSpeedingUpSelector = s => s.setIsSpeedingUp\nconst setGameOverSelector = s => s.setGameOver\n\nexport default function GameState() {\n  const ship = useStore(shipSelector)\n  const setScore = useStore(setScoreSelector)\n  const gameStarted = useStore(gameStartedSelector)\n  const setIsSpeedingUp = useStore(setIsSpeedingUpSelector)\n  const setGameOver = useStore(setGameOverSelector)\n\n  const level = useStore(s => s.level)\n\n  useEffect(() => {\n    mutation.currentLevelLength = -(level * PLANE_SIZE * LEVEL_SIZE)\n  }, [level])\n\n  useEffect(() => {\n    if (gameStarted) {\n      mutation.desiredSpeed = INITIAL_GAME_SPEED\n    }\n  }, [gameStarted])\n\n\n\n  useFrame((state, delta) => {\n\n    // acceleration logic\n    const accelDelta = 1 * delta * 0.15\n    if (gameStarted && !mutation.gameOver) {\n      if (mutation.gameSpeed < mutation.desiredSpeed) {\n        setIsSpeedingUp(true)\n        if (mutation.gameSpeed + accelDelta > mutation.desiredSpeed) {\n          mutation.gameSpeed = mutation.desiredSpeed\n        } else {\n          mutation.gameSpeed += accelDelta\n        }\n      } else {\n        setIsSpeedingUp(false)\n      }\n    }\n\n    if (ship.current) {\n      // sets the score counter in the hud\n      mutation.score = Math.abs(ship.current.position.z) - 10\n\n      // optimization, instead of calculating this for all elements we do it once per frame here\n      mutation.shouldShiftItems = ship.current.position.z < -400 && ship.current.position.z < mutation.currentLevelLength - 400 && ship.current.position.z > mutation.currentLevelLength - 1000\n    }\n\n    if (gameStarted && mutation.gameOver) {\n      setScore(Math.abs(ship.current.position.z) - 10)\n      setGameOver(true)\n    }\n  })\n\n  return null\n}","import { useFrame } from '@react-three/fiber'\nimport { useRef } from 'react'\n\nimport { COLORS } from '../constants'\n\nimport { mutation } from '../state/useStore'\n\n// handles gracefully fading all objects to the correct color depending on level\n// mutates state directly for performance reasons\nexport default function GlobalColor({ materialRef }) {\n  const colorAlpha = useRef(0)\n  const previousLevel = useRef(0)\n\n  const rainbowAlpha1 = useRef(0)\n  const rainbowAlpha2 = useRef(0)\n  const rainbowAlpha3 = useRef(0)\n  const rainbowAlpha4 = useRef(0)\n  const rainbowAlpha5 = useRef(0)\n\n  useFrame((state, delta) => {\n    // Make sure the first level is red\n    if (mutation.colorLevel === 0) {\n      mutation.globalColor.set(COLORS[0].three)\n    }\n\n    // Rainbow Level\n    if (mutation.colorLevel === 6) {\n      const rainbowSpeed = delta * 3\n\n      if (rainbowAlpha1.current < 1) {\n        rainbowAlpha1.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[0].three, COLORS[2].three, rainbowAlpha1.current)\n      } else if (rainbowAlpha2.current < 1) {\n        rainbowAlpha2.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[2].three, COLORS[3].three, rainbowAlpha2.current)\n      } else if (rainbowAlpha3.current < 1) {\n        rainbowAlpha3.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[3].three, COLORS[1].three, rainbowAlpha3.current)\n      } else if (rainbowAlpha4.current < 1) {\n        rainbowAlpha4.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[1].three, COLORS[5].three, rainbowAlpha4.current)\n      } else if (rainbowAlpha5.current < 1) {\n        rainbowAlpha5.current += rainbowSpeed\n        mutation.globalColor.lerpColors(COLORS[5].three, COLORS[0].three, rainbowAlpha5.current)\n      } else {\n        rainbowAlpha1.current = 0\n        rainbowAlpha2.current = 0\n        rainbowAlpha3.current = 0\n        rainbowAlpha4.current = 0\n        rainbowAlpha5.current = 0\n      }\n\n      previousLevel.current = 0\n\n      // regular levels\n    } else if (mutation.colorLevel > previousLevel.current) {\n      mutation.globalColor.lerpColors(COLORS[previousLevel.current].three, COLORS[mutation.colorLevel].three, colorAlpha.current)\n\n      if (colorAlpha.current + (delta * mutation.gameSpeed) * 0.5 > 1) {\n        colorAlpha.current = 1\n      } else {\n        colorAlpha.current += (delta * mutation.gameSpeed) * 0.5\n      }\n\n      if (colorAlpha.current === 1) {\n        previousLevel.current = mutation.colorLevel\n        colorAlpha.current = 0\n      }\n    }\n  })\n\n  return null\n}","export default __webpack_public_path__ + \"static/media/intro-loop.85c70e50.mp3\";","export default __webpack_public_path__ + \"static/media/main-nodrums.b36a5309.mp3\";","export default __webpack_public_path__ + \"static/media/main-onlydrums.f5b7b0b0.mp3\";","import { AudioListener, AudioLoader, AudioAnalyser } from 'three'\nimport { useRef, useEffect, useState, Suspense } from 'react'\nimport { useLoader, useFrame } from '@react-three/fiber'\nimport { MathUtils } from 'three'\n\n\nimport { mutation, useStore } from '../state/useStore'\n\nimport introSong from '../audio/intro-loop.mp3'\n\nimport mainSong from '../audio/main-nodrums.mp3'\nimport mainSongDrums from '../audio/main-onlydrums.mp3'\n\nfunction Music() {\n  const introPlayer = useRef()\n  const themePlayer = useRef()\n  const drumPlayer = useRef()\n\n  const soundOrigin = useRef()\n\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n  const camera = useStore(s => s.camera)\n  const level = useStore(s => s.level)\n  const hasInteracted = useStore(s => s.hasInteracted)\n\n  const [listener] = useState(() => new AudioListener())\n\n  const introTheme = useLoader(AudioLoader, introSong)\n  const mainTheme = useLoader(AudioLoader, mainSong)\n  const mainThemeDrums = useLoader(AudioLoader, mainSongDrums)\n\n  const themeFilter = useRef()\n  const audioAnalyzer = useRef()\n\n  const introVolume = useRef(1)\n  const themeVolume = useRef(0)\n  const drumVolume = useRef(0)\n\n  const introPlaying = useRef(true)\n  const startCrossfade = useRef(false)\n\n  useEffect(() => {\n    if (hasInteracted && musicEnabled) {\n      introPlayer.current.context.resume()\n    }\n  }, [hasInteracted, musicEnabled])\n\n  useEffect(() => {\n    introPlayer.current.setBuffer(introTheme)\n  }, [introTheme])\n\n  // creates a lowpass filter with the browser audio API, also an audio analyzer\n  useEffect(() => {\n    themePlayer.current.setBuffer(mainTheme)\n    themeFilter.current = themePlayer.current.context.createBiquadFilter()\n    themeFilter.current.type = \"lowpass\"\n    themeFilter.current.frequency.value = 0\n    themePlayer.current.setFilter(themeFilter.current)\n\n  }, [mainTheme])\n\n  useEffect(() => {\n    drumPlayer.current.setBuffer(mainThemeDrums)\n\n    audioAnalyzer.current = new AudioAnalyser(drumPlayer.current, 32)\n  }, [mainThemeDrums])\n\n  useEffect(() => {\n    if (!musicEnabled) {\n      if (introPlayer.current?.isPlaying) {\n        introPlayer.current.stop()\n      }\n\n      if (themePlayer.current?.isPlaying) {\n        themePlayer.current.stop()\n        drumPlayer.current.stop()\n      }\n\n    }\n  }, [musicEnabled])\n\n  useEffect(() => {\n    if (musicEnabled && !gameOver) {\n      if (!introPlayer.current.isPlaying) {\n        introPlayer.current.play()\n        introPlaying.current = true\n      }\n    } else {\n      if (introPlayer.current?.isPlaying) {\n        introPlayer.current.stop()\n      }\n    }\n\n    introPlayer.current.setLoop(true)\n    themePlayer.current.setLoop(true)\n    drumPlayer.current.setLoop(true)\n\n    if (camera.current) {\n      const cam = camera.current\n      cam.add(listener)\n      return () => cam.remove(listener)\n    }\n\n  }, [musicEnabled, introTheme, mainTheme, mainThemeDrums, gameStarted, gameOver, camera, listener])\n\n  useEffect(() => {\n    if (level > 0 && level % 2 === 0) {\n      themePlayer.current.setPlaybackRate(1 + level * 0.02)\n      drumPlayer.current.setPlaybackRate(1 + level * 0.02)\n    } else if (level === 0) {\n      themePlayer.current.setPlaybackRate(1)\n      drumPlayer.current.setPlaybackRate(1)\n    }\n  }, [level])\n\n  useFrame((state, delta) => {\n    if (musicEnabled) {\n\n      if (audioAnalyzer.current) {\n        const audioLevel = MathUtils.inverseLerp(0, 255, audioAnalyzer.current.getFrequencyData()[0])\n        mutation.currentMusicLevel = audioLevel\n      }\n\n      // start playing main theme \"on the beat\" when game starts\n      if (gameStarted && !themePlayer.current.isPlaying) {\n        if (introPlayer.current.context.currentTime.toFixed(1) % 9.6 === 0) {\n          startCrossfade.current = true\n          themePlayer.current.play()\n          drumPlayer.current.play()\n          themePlayer.current.setVolume(0)\n          drumPlayer.current.setVolume(0)\n        }\n      }\n\n      // crossfade intro music to main theme when game starts\n      if (gameStarted && !gameOver && themeVolume.current < 1) {\n        if (!themePlayer.current.isPlaying) {\n          themePlayer.current.play()\n          drumPlayer.current.play()\n        }\n\n        themeFilter.current.frequency.value += delta * 4000\n\n        if (themeVolume.current + delta * 0.2 > 1) {\n          themeVolume.current = 1\n          drumVolume.current = 1\n        } else {\n          themeVolume.current += delta * 0.2\n          drumVolume.current += delta * 0.2\n        }\n\n        if (introVolume.current - delta * 0.2 < 0) {\n          introVolume.current = 0\n        } else {\n          introVolume.current -= delta * 0.2\n        }\n\n        introPlayer.current.setVolume(introVolume.current)\n        themePlayer.current.setVolume(themeVolume.current)\n        drumPlayer.current.setVolume(drumVolume.current)\n      }\n\n\n      // Crossfade main theme back to intro on game over\n      if (gameOver && introVolume.current < 1) {\n        if (!introPlayer.current.isPlaying) {\n          introPlayer.current.play()\n        }\n\n        themeFilter.current.frequency.value -= delta * 4000\n\n        if (themeVolume.current - delta * 0.2 < 0) {\n          themeVolume.current = 0\n          drumVolume.current = 0\n        } else {\n          themeVolume.current -= delta * 0.2\n          drumVolume.current -= delta * 0.2\n        }\n\n        if (introVolume.current + delta * 0.2 > 1) {\n          introVolume.current = 1\n        } else {\n          introVolume.current += delta * 0.2\n        }\n\n        introPlayer.current.setVolume(introVolume.current)\n        themePlayer.current.setVolume(themeVolume.current)\n        drumPlayer.current.setVolume(drumVolume.current)\n      }\n    }\n  })\n\n  return (\n    <group ref={soundOrigin}>\n      <audio ref={introPlayer} args={[listener]} />\n      <audio ref={themePlayer} args={[listener]} />\n      <audio ref={drumPlayer} args={[listener]} />\n    </group>\n  )\n}\n\nexport default function SuspenseMusic() {\n\n  return (\n    <Suspense fallback={null}>\n      <Music />\n    </Suspense>\n  )\n}","export default __webpack_public_path__ + \"static/media/speedup2.ed639f5a.mp3\";","import { AudioListener, AudioLoader } from 'three'\nimport { useRef, useEffect, useState, Suspense } from 'react'\nimport { useLoader } from '@react-three/fiber'\n\nimport { useStore } from '../state/useStore'\n\nimport speedUp from '../audio/speedup2.mp3'\n\nfunction Sound() {\n  const sound = useRef()\n  const soundOrigin = useRef()\n\n\n  const camera = useStore(s => s.camera)\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const level = useStore(s => s.level)\n  const gameStarted = useStore(s => s.gameStarted)\n\n  const [listener] = useState(() => new AudioListener())\n\n  const speedUpSound = useLoader(AudioLoader, speedUp)\n\n\n  useEffect(() => {\n    sound.current.setBuffer(speedUpSound)\n\n    if (musicEnabled) {\n      sound.current.setVolume(0.5)\n    } else {\n      sound.current.setVolume(0)\n    }\n\n    if (camera.current) {\n      const cam = camera.current\n      cam.add(listener)\n      return () => cam.remove(listener)\n    }\n  }, [speedUpSound, musicEnabled, camera, listener])\n\n  useEffect(() => {\n    if (gameStarted && level > 0) {\n      sound.current.setBuffer(speedUpSound)\n      sound.current.play()\n    }\n  }, [gameStarted, level, speedUpSound])\n\n  return (\n    <group ref={soundOrigin}>\n      <audio ref={sound} args={[listener]} />\n    </group>\n  )\n}\n\nexport default function SuspenseSound() {\n\n  return (\n    <Suspense fallback={null}>\n      <Sound />\n    </Suspense>\n  )\n}","import * as React from 'react'\n\nconst defaultDataInterpolation = (p) => `Loading: ${p.toFixed(0)}%`\n\nexport default function CustomLoader({ active, progress, dataInterpolation = defaultDataInterpolation }) {\n  const progressRef = React.useRef(0)\n  const rafRef = React.useRef(0)\n  const progressSpanRef = React.useRef(null)\n\n  const updateProgress = React.useCallback(() => {\n    if (!progressSpanRef.current) return\n    progressRef.current += (progress - progressRef.current) / 2\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current)\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress)\n  }, [dataInterpolation, progress])\n\n  React.useEffect(() => {\n    updateProgress()\n    return () => cancelAnimationFrame(rafRef.current)\n  }, [updateProgress])\n\n  return (\n    <div style={{ ...styles.container, opacity: active ? 1 : 0 }}>\n      <div>\n        <div style={{ ...styles.inner }}>\n          <div style={{ ...styles.bar, transform: `scaleX(${progress / 100})` }}></div>\n          <div style={{ marginTop: '1.5rem' }}>\n            <span ref={progressSpanRef} style={{ ...styles.data }} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 300ms ease',\n    zIndex: 1000,\n  },\n  inner: {\n    width: 206,\n    height: 26,\n    textAlign: 'center',\n    borderRadius: '5px',\n    boxShadow: '0 0 20px 0px #bd4902',\n    border: '3px solid #bd4902'\n  },\n  bar: {\n    height: 20,\n    width: '100%',\n    background: '#bd4902',\n    transition: 'transform 200ms',\n    transformOrigin: 'left center',\n    boxShadow: '0 0 20px 0px #bd4902'\n  },\n  data: {\n    textAlign: 'center',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '2rem',\n    color: '#f0f0f0',\n    fontSize: '2em',\n    fontFamily: `'Commando', mono, monospace, -apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    whiteSpace: 'nowrap',\n    textShadow: '0 0 20px #bd4902'\n  },\n}\n","import { useProgress } from '@react-three/drei'\nimport { useState, useEffect } from 'react'\n\nimport Loader from './CustomLoader'\n\nimport '../../styles/gameMenu.css'\n\nimport { useStore } from '../../state/useStore'\n\nconst Overlay = () => {\n  const [shown, setShown] = useState(true)\n  const [opaque, setOpaque] = useState(true)\n  const [hasLoaded, setHasLoaded] = useState(false)\n  const { active, progress } = useProgress()\n\n  const gameStarted = useStore(s => s.gameStarted)\n  const gameOver = useStore(s => s.gameOver)\n  const setGameStarted = useStore(s => s.setGameStarted)\n  const musicEnabled = useStore(s => s.musicEnabled)\n  const enableMusic = useStore(s => s.enableMusic)\n  const setHasInteracted = useStore(s => s.setHasInteracted)\n\n  useEffect(() => {\n    if (gameStarted || gameOver) {\n      setShown(false)\n    } else if (!gameStarted) {\n      setShown(true)\n    }\n  }, [gameStarted, active, gameOver])\n\n  useEffect(() => {\n    let t\n    if (hasLoaded === opaque) t = setTimeout(() => setOpaque(!hasLoaded), 300)\n    return () => clearTimeout(t)\n  }, [hasLoaded, opaque])\n\n  useEffect(() => {\n    localStorage.setItem('musicEnabled', JSON.stringify(musicEnabled))\n  }, [musicEnabled])\n\n  useEffect(() => {\n    if (progress >= 100) {\n      setHasLoaded(true)\n    }\n  }, [progress])\n\n  const handleStart = () => {\n    setGameStarted(true)\n  }\n\n  const handleMusic = () => {\n    enableMusic(!musicEnabled)\n  }\n\n  return shown ? (\n    <div onClick={() => setHasInteracted()} className={`game__container`} style={{ opacity: shown ? 1 : 0, background: opaque ? '#141622FF' : '#141622CC' }}>\n      <div className=\"game__menu\">\n        <div className=\"game__subcontainer\">\n          {!hasLoaded ? (\n            <Loader active={active} progress={progress} />\n          ) : (\n            <>\n              <button onClick={handleStart} className=\"game__menu-button\">{'STA>RT'}</button>\n              <div className=\"game__menu-options\">\n                <button onClick={handleMusic} className=\"game__menu-button game__menu-button-music\">{`TURN MUSIC ${musicEnabled ? 'OF>F' : 'O<N'}`}</button>\n                <span className=\"game__menu-controls\">\n                  <p>Controls</p>\n                  ← a / d →\n                </span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div >\n  ) : null\n}\n\nexport default Overlay","import { useEffect, useState, useRef } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { addEffect } from '@react-three/fiber'\n\nimport { useStore, mutation } from '../../state/useStore'\n\nimport '../../styles/hud.css'\n\nconst getScore = () => `${mutation.score.toFixed(0)}`\n\n\nexport default function Hud() {\n  const set = useStore((state) => state.set)\n  const level = useStore(s => s.level)\n\n  const gameOver = useStore(s => s.gameOver)\n  const gameStarted = useStore(s => s.gameStarted)\n  const isSpeedingUp = useStore(s => s.isSpeedingUp)\n\n  const [shown, setShown] = useState(false)\n\n  const [showControls, setShowControls] = useState(false)\n  const [left, setLeftPressed] = useState(false)\n  const [right, setRightPressed] = useState(false)\n\n\n  // performance optimization for the rapidly updating speedometer and score - see https://github.com/pmndrs/racing-game/blob/main/src/ui/Speed/Text.tsx\n  let then = Date.now()\n\n  const scoreRef = useRef()\n\n  let currentScore = getScore()\n\n  useEffect(() => addEffect(() => {\n    const now = Date.now()\n\n    if (now - then > 33.3333) { // throttle these to a max of 30 updates/sec\n      if (scoreRef.current) {\n        scoreRef.current.innerText = getScore()\n      }\n\n      // eslint-disable-next-line\n      then = now\n    }\n  }))\n\n  useEffect(() => {\n    if (showControls) {\n      window.oncontextmenu = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n      }\n    }\n  }, [showControls])\n\n  useEffect(() => {\n    if (gameStarted && !gameOver) {\n      setShown(true)\n    } else {\n      setShown(false)\n    }\n  }, [gameStarted, gameOver])\n\n  useEffect(() => {\n    if (isMobile) {\n      setShowControls(true)\n    } else {\n      setShowControls(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    set((state) => ({ ...state, controls: { ...state.controls, left } }))\n  }, [set, left])\n\n  useEffect(() => {\n    set((state) => ({ ...state, controls: { ...state.controls, right } }))\n  }, [set, right])\n\n  return shown ? (\n    <div className=\"hud\">\n      {level > 0 && isSpeedingUp && (\n        <div className=\"center\">\n          <h3 className=\"center__speedup\">SPEED UP</h3>\n        </div>\n      )}\n      {showControls && (\n        <div className=\"controls\">\n          <button onTouchStart={() => setLeftPressed(true)} onTouchEnd={() => setLeftPressed(false)} className={`control control__left ${left ? 'control-active' : ''}`}>{'<'}</button>\n          <button onTouchStart={() => setRightPressed(true)} onTouchEnd={() => setRightPressed(false)} className={`control control__right ${right ? 'control-active' : ''}`}>{'>'}</button>\n        </div>\n      )}\n      <div className=\"bottomRight\">\n        <div className={`score ${showControls ? 'score__withcontrols' : ''}`}>\n          <h3 className=\"score__title\">LEVEL</h3>\n          <h1 className=\"score__number\">{level + 1}</h1>\n          <h3 className=\"score__title\">SCORE</h3>\n          <h1 ref={scoreRef} className=\"score__number\">{currentScore}</h1>\n        </div>\n      </div>\n    </div>\n  ) : null\n}","import { useState, useEffect } from 'react'\n\n// import enduranceLogo from '../../textures/endurance-logo.png'\n\nimport '../../styles/gameMenu.css'\n\nimport { useStore } from '../../state/useStore'\n\nconst GameOverScreen = () => {\n  const previousScores = localStorage.getItem('highscores') ? JSON.parse(localStorage.getItem('highscores')) : [...Array(3).fill(0)]\n  const [shown, setShown] = useState(false)\n  const [opaque, setOpaque] = useState(false)\n  const [highScores, setHighscores] = useState(previousScores)\n\n  const gameOver = useStore(s => s.gameOver)\n  const score = useStore(s => s.score)\n\n  useEffect(() => {\n    let t\n    if (gameOver !== opaque) t = setTimeout(() => setOpaque(gameOver), 500)\n    return () => clearTimeout(t)\n  }, [gameOver, opaque])\n\n  useEffect(() => {\n    if (gameOver) {\n      setShown(true)\n    } else {\n      setShown(false)\n    }\n  }, [gameOver])\n\n  useEffect(() => {\n    if (gameOver) {\n      if (highScores.some(previousScore => score > previousScore)) {\n        const sortedScores = highScores.sort((a, b) => a - b)\n        sortedScores[0] = score.toFixed(0)\n        const resortedScores = sortedScores.sort((a, b) => b - a)\n\n        setHighscores(resortedScores)\n        localStorage.setItem('highscores', JSON.stringify(resortedScores))\n      }\n    }\n  }, [gameOver, highScores, score])\n\n  const handleRestart = () => {\n    window.location.reload() // TODO: make a proper restart\n  }\n\n  return shown ? (\n    <div className=\"game__container\" style={{ opacity: shown ? 1 : 0, background: opaque ? '#141622FF' : '#141622CC' }}>\n      <div className=\"game__menu\">\n        {/* <img className=\"game__logo-small\" width=\"512px\" src={enduranceLogo} alt=\"Endurance Logo\" /> */}\n        <h1 className=\"game__score-gameover\">GAME OVER</h1>\n        <div className=\"game__scorecontainer\">\n          <div className=\"game__score-left\">\n            <h1 className=\"game__score-title\">SCORE</h1>\n            <h1 className=\"game__score\">{score.toFixed(0)}</h1>\n          </div>\n          <div className=\"game__score-right\">\n            <h1 className=\"game__score-title\">HIGH SCORES</h1>\n            {highScores.map((newScore, i) => (\n              <div key={`${i}-${score}`} className=\"game__score-highscore\">\n                <span className=\"game__score-number\">{i + 1}</span>\n                <span style={{ textDecoration: score.toFixed(0) === newScore ? 'underline' : 'none' }} className=\"game__score-score\">{newScore > 0 ? newScore : '-'}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        <button onClick={handleRestart} className=\"game__menu-button\">RESTART</button>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default GameOverScreen","import { Canvas } from '@react-three/fiber'\nimport { Suspense } from 'react'\nimport { Preload } from '@react-three/drei'\n\nimport { useStore } from '../state/useStore'\n\n// THREE components\nimport Ship from './Ship'\nimport Skybox from './Skybox'\nimport Cubes from './Cubes'\nimport Pongs from './Pongs'\nimport Walls from './Walls'\nimport Effects from './Effects'\n\n// State/dummy components\nimport KeyboardControls from './KeyboardControls'\nimport GameState from './GameState'\nimport GlobalColor from './GlobalColor'\nimport Music from './Music'\nimport Sound from './Sound'\n\n// HTML components\nimport Overlay from './html/Overlay'\nimport Hud from './html/Hud'\nimport GameOverScreen from './html/GameOverScreen'\n\n\nexport default function EnduranceWorld({ color, bgColor }) {\n  const directionalLight = useStore((s) => s.directionalLight)\n\n  return (\n    <>\n      <Canvas gl={{ antialias: false, alpha: false }} mode=\"concurrent\" dpr={[1, 1.5]} style={{ background: `${bgColor}` }}>\n        <Suspense fallback={null}>\n          <GameState />\n          <Skybox />\n          <directionalLight\n            ref={directionalLight}\n            intensity={3}\n            position={[0, Math.PI, 0]}\n          />\n          <ambientLight intensity={0.1} />\n          <Ship>\n            {directionalLight.current && <primitive object={directionalLight.current.target} />}\n          </Ship>\n          <Walls />\n          <Cubes />\n          <Pongs />\n          <KeyboardControls />\n          <Effects />\n          <GlobalColor />\n          <Music />\n          <Sound />\n          <Preload all />\n        </Suspense>\n      </Canvas>\n      <Hud />\n      <GameOverScreen />\n      <Overlay />\n    </>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/normalize.css'\nimport './styles/index.css';\n\nimport EnduranceWorld from './components/EnduranceWorld';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <EnduranceWorld bgColor='#ff2919' />\n  </React.StrictMode>\n)"],"sourceRoot":""}